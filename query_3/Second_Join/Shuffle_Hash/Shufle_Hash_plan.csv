Description,Details
Execution Plan,"== Parsed Logical Plan ==
Join Inner,  **org.apache.spark.sql.sedona_sql.expressions.ST_Within**
:- Project [DR_NO#73751, LAT#73777, LON#73778,  **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#73811]
:  +- Project [DR_NO#73751, LAT#73777, LON#73778]
:     +- Filter (NOT (cast(LAT#73777 as int) = 0) AND NOT (cast(LON#73778 as int) = 0))
:        +- Relation [DR_NO#73751,Date Rptd#73752,DATE OCC#73753,TIME OCC#73754,AREA #73755,AREA NAME#73756,Rpt Dist No#73757,Part 1-2#73758,Crm Cd#73759,Crm Cd Desc#73760,Mocodes#73761,Vict Age#73762,Vict Sex#73763,Vict Descent#73764,Premis Cd#73765,Premis Desc#73766,Weapon Used Cd#73767,Weapon Desc#73768,Status#73769,Status Desc#73770,Crm Cd 1#73771,Crm Cd 2#73772,Crm Cd 3#73773,Crm Cd 4#73774,... 4 more fields] csv
+- ResolvedHint (strategy=shuffle_hash)
   +- Filter (((HOUSING10#73466L >= cast(0 as bigint)) AND (POP_2010#73469L >= cast(0 as bigint))) AND (CITY#73458 = Los Angeles))
      +- Project [properties#73448.BG10 AS BG10#73453, properties#73448.BG10FIP10 AS BG10FIP10#73454, properties#73448.BG12 AS BG12#73455, properties#73448.CB10 AS CB10#73456, properties#73448.CEN_FIP13 AS CEN_FIP13#73457, properties#73448.CITY AS CITY#73458, properties#73448.CITYCOM AS CITYCOM#73459, properties#73448.COMM AS COMM#73460, properties#73448.CT10 AS CT10#73461, properties#73448.CT12 AS CT12#73462, properties#73448.CTCB10 AS CTCB10#73463, properties#73448.HD_2012 AS HD_2012#73464L, properties#73448.HD_NAME AS HD_NAME#73465, properties#73448.HOUSING10 AS HOUSING10#73466L, properties#73448.LA_FIP10 AS LA_FIP10#73467, properties#73448.OBJECTID AS OBJECTID#73468L, properties#73448.POP_2010 AS POP_2010#73469L, properties#73448.PUMA10 AS PUMA10#73470, properties#73448.SPA_2012 AS SPA_2012#73471L, properties#73448.SPA_NAME AS SPA_NAME#73472, properties#73448.SUP_DIST AS SUP_DIST#73473, properties#73448.SUP_LABEL AS SUP_LABEL#73474, properties#73448.ShapeSTArea AS ShapeSTArea#73475, properties#73448.ShapeSTLength AS ShapeSTLength#73476, ... 2 more fields]
         +- Project [features#73444.geometry AS geometry#73447, features#73444.properties AS properties#73448, features#73444.type AS type#73449]
            +- Project [features#73444]
               +- Generate explode(features#73436), false, [features#73444]
                  +- Relation [crs#73435,features#73436,name#73437,type#73438] geojson

== Analyzed Logical Plan ==
DR_NO: string, LAT: string, LON: string, geom: geometry, BG10: string, BG10FIP10: string, BG12: string, CB10: string, CEN_FIP13: string, CITY: string, CITYCOM: string, COMM: string, CT10: string, CT12: string, CTCB10: string, HD_2012: bigint, HD_NAME: string, HOUSING10: bigint, LA_FIP10: string, OBJECTID: bigint, POP_2010: bigint, PUMA10: string, SPA_2012: bigint, SPA_NAME: string, ... 6 more fields
Join Inner,  **org.apache.spark.sql.sedona_sql.expressions.ST_Within**
:- Project [DR_NO#73751, LAT#73777, LON#73778,  **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#73811]
:  +- Project [DR_NO#73751, LAT#73777, LON#73778]
:     +- Filter (NOT (cast(LAT#73777 as int) = 0) AND NOT (cast(LON#73778 as int) = 0))
:        +- Relation [DR_NO#73751,Date Rptd#73752,DATE OCC#73753,TIME OCC#73754,AREA #73755,AREA NAME#73756,Rpt Dist No#73757,Part 1-2#73758,Crm Cd#73759,Crm Cd Desc#73760,Mocodes#73761,Vict Age#73762,Vict Sex#73763,Vict Descent#73764,Premis Cd#73765,Premis Desc#73766,Weapon Used Cd#73767,Weapon Desc#73768,Status#73769,Status Desc#73770,Crm Cd 1#73771,Crm Cd 2#73772,Crm Cd 3#73773,Crm Cd 4#73774,... 4 more fields] csv
+- ResolvedHint (strategy=shuffle_hash)
   +- Filter (((HOUSING10#73466L >= cast(0 as bigint)) AND (POP_2010#73469L >= cast(0 as bigint))) AND (CITY#73458 = Los Angeles))
      +- Project [properties#73448.BG10 AS BG10#73453, properties#73448.BG10FIP10 AS BG10FIP10#73454, properties#73448.BG12 AS BG12#73455, properties#73448.CB10 AS CB10#73456, properties#73448.CEN_FIP13 AS CEN_FIP13#73457, properties#73448.CITY AS CITY#73458, properties#73448.CITYCOM AS CITYCOM#73459, properties#73448.COMM AS COMM#73460, properties#73448.CT10 AS CT10#73461, properties#73448.CT12 AS CT12#73462, properties#73448.CTCB10 AS CTCB10#73463, properties#73448.HD_2012 AS HD_2012#73464L, properties#73448.HD_NAME AS HD_NAME#73465, properties#73448.HOUSING10 AS HOUSING10#73466L, properties#73448.LA_FIP10 AS LA_FIP10#73467, properties#73448.OBJECTID AS OBJECTID#73468L, properties#73448.POP_2010 AS POP_2010#73469L, properties#73448.PUMA10 AS PUMA10#73470, properties#73448.SPA_2012 AS SPA_2012#73471L, properties#73448.SPA_NAME AS SPA_NAME#73472, properties#73448.SUP_DIST AS SUP_DIST#73473, properties#73448.SUP_LABEL AS SUP_LABEL#73474, properties#73448.ShapeSTArea AS ShapeSTArea#73475, properties#73448.ShapeSTLength AS ShapeSTLength#73476, ... 2 more fields]
         +- Project [features#73444.geometry AS geometry#73447, features#73444.properties AS properties#73448, features#73444.type AS type#73449]
            +- Project [features#73444]
               +- Generate explode(features#73436), false, [features#73444]
                  +- Relation [crs#73435,features#73436,name#73437,type#73438] geojson

== Optimized Logical Plan ==
Join Inner,  **org.apache.spark.sql.sedona_sql.expressions.ST_Within**  , rightHint=(strategy=shuffle_hash)
:- Project [DR_NO#73751, LAT#73777, LON#73778,  **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#73811]
:  +- Filter (((isnotnull(LAT#73777) AND isnotnull(LON#73778)) AND (NOT (cast(LAT#73777 as int) = 0) AND NOT (cast(LON#73778 as int) = 0))) AND isnotnull( **org.apache.spark.sql.sedona_sql.expressions.ST_Point**  ))
:     +- Relation [DR_NO#73751,Date Rptd#73752,DATE OCC#73753,TIME OCC#73754,AREA #73755,AREA NAME#73756,Rpt Dist No#73757,Part 1-2#73758,Crm Cd#73759,Crm Cd Desc#73760,Mocodes#73761,Vict Age#73762,Vict Sex#73763,Vict Descent#73764,Premis Cd#73765,Premis Desc#73766,Weapon Used Cd#73767,Weapon Desc#73768,Status#73769,Status Desc#73770,Crm Cd 1#73771,Crm Cd 2#73772,Crm Cd 3#73773,Crm Cd 4#73774,... 4 more fields] csv
+- Project [features#73444.properties.BG10 AS BG10#73453, features#73444.properties.BG10FIP10 AS BG10FIP10#73454, features#73444.properties.BG12 AS BG12#73455, features#73444.properties.CB10 AS CB10#73456, features#73444.properties.CEN_FIP13 AS CEN_FIP13#73457, features#73444.properties.CITY AS CITY#73458, features#73444.properties.CITYCOM AS CITYCOM#73459, features#73444.properties.COMM AS COMM#73460, features#73444.properties.CT10 AS CT10#73461, features#73444.properties.CT12 AS CT12#73462, features#73444.properties.CTCB10 AS CTCB10#73463, features#73444.properties.HD_2012 AS HD_2012#73464L, features#73444.properties.HD_NAME AS HD_NAME#73465, features#73444.properties.HOUSING10 AS HOUSING10#73466L, features#73444.properties.LA_FIP10 AS LA_FIP10#73467, features#73444.properties.OBJECTID AS OBJECTID#73468L, features#73444.properties.POP_2010 AS POP_2010#73469L, features#73444.properties.PUMA10 AS PUMA10#73470, features#73444.properties.SPA_2012 AS SPA_2012#73471L, features#73444.properties.SPA_NAME AS SPA_NAME#73472, features#73444.properties.SUP_DIST AS SUP_DIST#73473, features#73444.properties.SUP_LABEL AS SUP_LABEL#73474, features#73444.properties.ShapeSTArea AS ShapeSTArea#73475, features#73444.properties.ShapeSTLength AS ShapeSTLength#73476, ... 2 more fields]
   +- Filter ((((isnotnull(features#73444.properties.HOUSING10) AND isnotnull(features#73444.properties.POP_2010)) AND isnotnull(features#73444.properties.CITY)) AND (((features#73444.properties.HOUSING10 >= 0) AND (features#73444.properties.POP_2010 >= 0)) AND (features#73444.properties.CITY = Los Angeles))) AND isnotnull(features#73444.geometry))
      +- Generate explode(features#73436), [0], false, [features#73444]
         +- Project [features#73436]
            +- Filter ((size(features#73436, true) > 0) AND isnotnull(features#73436))
               +- Relation [crs#73435,features#73436,name#73437,type#73438] geojson

== Physical Plan ==
RangeJoin geom#73811: geometry, geometry#73447: geometry, WITHIN
:- Project [DR_NO#73751, LAT#73777, LON#73778,  **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#73811]
:  +- Filter ((((isnotnull(LAT#73777) AND isnotnull(LON#73778)) AND NOT (cast(LAT#73777 as int) = 0)) AND NOT (cast(LON#73778 as int) = 0)) AND isnotnull( **org.apache.spark.sql.sedona_sql.expressions.ST_Point**  ))
:     +- FileScan csv [DR_NO#73751,LAT#73777,LON#73778] Batched: false, DataFilters: [isnotnull(LAT#73777), isnotnull(LON#73778), NOT (cast(LAT#73777 as int) = 0), NOT (cast(LON#7377..., Format: CSV, Location: InMemoryFileIndex(2 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/CrimeData/Crime_D..., PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<DR_NO:string,LAT:string,LON:string>
+- *(1) Project [features#73444.properties.BG10 AS BG10#73453, features#73444.properties.BG10FIP10 AS BG10FIP10#73454, features#73444.properties.BG12 AS BG12#73455, features#73444.properties.CB10 AS CB10#73456, features#73444.properties.CEN_FIP13 AS CEN_FIP13#73457, features#73444.properties.CITY AS CITY#73458, features#73444.properties.CITYCOM AS CITYCOM#73459, features#73444.properties.COMM AS COMM#73460, features#73444.properties.CT10 AS CT10#73461, features#73444.properties.CT12 AS CT12#73462, features#73444.properties.CTCB10 AS CTCB10#73463, features#73444.properties.HD_2012 AS HD_2012#73464L, features#73444.properties.HD_NAME AS HD_NAME#73465, features#73444.properties.HOUSING10 AS HOUSING10#73466L, features#73444.properties.LA_FIP10 AS LA_FIP10#73467, features#73444.properties.OBJECTID AS OBJECTID#73468L, features#73444.properties.POP_2010 AS POP_2010#73469L, features#73444.properties.PUMA10 AS PUMA10#73470, features#73444.properties.SPA_2012 AS SPA_2012#73471L, features#73444.properties.SPA_NAME AS SPA_NAME#73472, features#73444.properties.SUP_DIST AS SUP_DIST#73473, features#73444.properties.SUP_LABEL AS SUP_LABEL#73474, features#73444.properties.ShapeSTArea AS ShapeSTArea#73475, features#73444.properties.ShapeSTLength AS ShapeSTLength#73476, ... 2 more fields]
   +- *(1) Filter ((((isnotnull(features#73444.properties.HOUSING10) AND isnotnull(features#73444.properties.POP_2010)) AND isnotnull(features#73444.properties.CITY)) AND (((features#73444.properties.HOUSING10 >= 0) AND (features#73444.properties.POP_2010 >= 0)) AND (features#73444.properties.CITY = Los Angeles))) AND isnotnull(features#73444.geometry))
      +- *(1) Generate explode(features#73436), false, [features#73444]
         +- *(1) Filter ((size(features#73436, true) > 0) AND isnotnull(features#73436))
            +- FileScan geojson [features#73436] Batched: false, DataFilters: [(size(features#73436, true) > 0), isnotnull(features#73436)], Format: GEOJSON, Location: InMemoryFileIndex(1 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/2010_Census_Block..., PartitionFilters: [], PushedFilters: [IsNotNull(features)], ReadSchema: struct<features:array<struct<geometry:binary,properties:struct<BG10:string,BG10FIP10:string,BG12:..."
