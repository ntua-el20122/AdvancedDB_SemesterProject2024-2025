Join Strategy,Elapsed Time (sec),Execution Plan
SHUFFLE_HASH,12.37297534942627,"== Physical Plan ==
RangeJoin (9)
:- Project (3)
:  +- Filter (2)
:     +- Scan csv  (1)
+- * Project (8)
   +- * Filter (7)
      +- * Generate (6)
         +- * Filter (5)
            +- Scan geojson  (4)


(1) Scan csv 
Output [3]: [DR_NO#2623, LAT#2649, LON#2650]
Batched: false
Location: InMemoryFileIndex [s3://initial-notebook-data-bucket-dblab-905418150721/CrimeData/Crime_Data_from_2010_to_2019_20241101.csv, ... 1 entries]
PushedFilters: [IsNotNull(LAT), IsNotNull(LON)]
ReadSchema: struct<DR_NO:string,LAT:string,LON:string>

(2) Filter
Input [3]: [DR_NO#2623, LAT#2649, LON#2650]
Condition : ((((isnotnull(LAT#2649) AND isnotnull(LON#2650)) AND NOT (cast(LAT#2649 as int) = 0)) AND NOT (cast(LON#2650 as int) = 0)) AND isnotnull( **org.apache.spark.sql.sedona_sql.expressions.ST_Point**  ))

(3) Project
Output [4]: [DR_NO#2623, LAT#2649, LON#2650,  **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#2683]
Input [3]: [DR_NO#2623, LAT#2649, LON#2650]

(4) Scan geojson 
Output [1]: [features#2305]
Batched: false
Location: InMemoryFileIndex [s3://initial-notebook-data-bucket-dblab-905418150721/2010_Census_Blocks.geojson]
PushedFilters: [IsNotNull(features)]
ReadSchema: struct<features:array<struct<geometry:binary,properties:struct<BG10:string,BG10FIP10:string,BG12:string,CB10:string,CEN_FIP13:string,CITY:string,CITYCOM:string,COMM:string,CT10:string,CT12:string,CTCB10:string,HD_2012:bigint,HD_NAME:string,HOUSING10:bigint,LA_FIP10:string,OBJECTID:bigint,POP_2010:bigint,PUMA10:string,SPA_2012:bigint,SPA_NAME:string,SUP_DIST:string,SUP_LABEL:string,ShapeSTArea:double,ShapeSTLength:double,ZCTA10:string>,type:string>>>

(5) Filter [codegen id : 1]
Input [1]: [features#2305]
Condition : ((size(features#2305, true) > 0) AND isnotnull(features#2305))

(6) Generate [codegen id : 1]
Input [1]: [features#2305]
Arguments: explode(features#2305), false, [features#2313]

(7) Filter [codegen id : 1]
Input [1]: [features#2313]
Condition : ((((isnotnull(features#2313.properties.HOUSING10) AND isnotnull(features#2313.properties.POP_2010)) AND isnotnull(features#2313.properties.CITY)) AND (((features#2313.properties.HOUSING10 >= 0) AND (features#2313.properties.POP_2010 >= 0)) AND (features#2313.properties.CITY = Los Angeles))) AND isnotnull(features#2313.geometry))

(8) Project [codegen id : 1]
Output [26]: [features#2313.properties.BG10 AS BG10#2322, features#2313.properties.BG10FIP10 AS BG10FIP10#2323, features#2313.properties.BG12 AS BG12#2324, features#2313.properties.CB10 AS CB10#2325, features#2313.properties.CEN_FIP13 AS CEN_FIP13#2326, features#2313.properties.CITY AS CITY#2327, features#2313.properties.CITYCOM AS CITYCOM#2328, features#2313.properties.COMM AS COMM#2329, features#2313.properties.CT10 AS CT10#2330, features#2313.properties.CT12 AS CT12#2331, features#2313.properties.CTCB10 AS CTCB10#2332, features#2313.properties.HD_2012 AS HD_2012#2333L, features#2313.properties.HD_NAME AS HD_NAME#2334, features#2313.properties.HOUSING10 AS HOUSING10#2335L, features#2313.properties.LA_FIP10 AS LA_FIP10#2336, features#2313.properties.OBJECTID AS OBJECTID#2337L, features#2313.properties.POP_2010 AS POP_2010#2338L, features#2313.properties.PUMA10 AS PUMA10#2339, features#2313.properties.SPA_2012 AS SPA_2012#2340L, features#2313.properties.SPA_NAME AS SPA_NAME#2341, features#2313.properties.SUP_DIST AS SUP_DIST#2342, features#2313.properties.SUP_LABEL AS SUP_LABEL#2343, features#2313.properties.ShapeSTArea AS ShapeSTArea#2344, features#2313.properties.ShapeSTLength AS ShapeSTLength#2345, features#2313.properties.ZCTA10 AS ZCTA10#2346, features#2313.geometry AS geometry#2316]
Input [1]: [features#2313]

(9) RangeJoin
Arguments: geom#2683: geometry, geometry#2316: geometry, WITHIN"
