Description,Details
Execution Plan,"== Parsed Logical Plan ==
Join Inner,  **org.apache.spark.sql.sedona_sql.expressions.ST_Within**
:- Project [DR_NO#74560, LAT#74586, LON#74587,  **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#74620]
:  +- Project [DR_NO#74560, LAT#74586, LON#74587]
:     +- Filter (NOT (cast(LAT#74586 as int) = 0) AND NOT (cast(LON#74587 as int) = 0))
:        +- Relation [DR_NO#74560,Date Rptd#74561,DATE OCC#74562,TIME OCC#74563,AREA #74564,AREA NAME#74565,Rpt Dist No#74566,Part 1-2#74567,Crm Cd#74568,Crm Cd Desc#74569,Mocodes#74570,Vict Age#74571,Vict Sex#74572,Vict Descent#74573,Premis Cd#74574,Premis Desc#74575,Weapon Used Cd#74576,Weapon Desc#74577,Status#74578,Status Desc#74579,Crm Cd 1#74580,Crm Cd 2#74581,Crm Cd 3#74582,Crm Cd 4#74583,... 4 more fields] csv
+- ResolvedHint (strategy=shuffle_replicate_nl)
   +- Filter (((HOUSING10#74275L >= cast(0 as bigint)) AND (POP_2010#74278L >= cast(0 as bigint))) AND (CITY#74267 = Los Angeles))
      +- Project [properties#74257.BG10 AS BG10#74262, properties#74257.BG10FIP10 AS BG10FIP10#74263, properties#74257.BG12 AS BG12#74264, properties#74257.CB10 AS CB10#74265, properties#74257.CEN_FIP13 AS CEN_FIP13#74266, properties#74257.CITY AS CITY#74267, properties#74257.CITYCOM AS CITYCOM#74268, properties#74257.COMM AS COMM#74269, properties#74257.CT10 AS CT10#74270, properties#74257.CT12 AS CT12#74271, properties#74257.CTCB10 AS CTCB10#74272, properties#74257.HD_2012 AS HD_2012#74273L, properties#74257.HD_NAME AS HD_NAME#74274, properties#74257.HOUSING10 AS HOUSING10#74275L, properties#74257.LA_FIP10 AS LA_FIP10#74276, properties#74257.OBJECTID AS OBJECTID#74277L, properties#74257.POP_2010 AS POP_2010#74278L, properties#74257.PUMA10 AS PUMA10#74279, properties#74257.SPA_2012 AS SPA_2012#74280L, properties#74257.SPA_NAME AS SPA_NAME#74281, properties#74257.SUP_DIST AS SUP_DIST#74282, properties#74257.SUP_LABEL AS SUP_LABEL#74283, properties#74257.ShapeSTArea AS ShapeSTArea#74284, properties#74257.ShapeSTLength AS ShapeSTLength#74285, ... 2 more fields]
         +- Project [features#74253.geometry AS geometry#74256, features#74253.properties AS properties#74257, features#74253.type AS type#74258]
            +- Project [features#74253]
               +- Generate explode(features#74245), false, [features#74253]
                  +- Relation [crs#74244,features#74245,name#74246,type#74247] geojson

== Analyzed Logical Plan ==
DR_NO: string, LAT: string, LON: string, geom: geometry, BG10: string, BG10FIP10: string, BG12: string, CB10: string, CEN_FIP13: string, CITY: string, CITYCOM: string, COMM: string, CT10: string, CT12: string, CTCB10: string, HD_2012: bigint, HD_NAME: string, HOUSING10: bigint, LA_FIP10: string, OBJECTID: bigint, POP_2010: bigint, PUMA10: string, SPA_2012: bigint, SPA_NAME: string, ... 6 more fields
Join Inner,  **org.apache.spark.sql.sedona_sql.expressions.ST_Within**
:- Project [DR_NO#74560, LAT#74586, LON#74587,  **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#74620]
:  +- Project [DR_NO#74560, LAT#74586, LON#74587]
:     +- Filter (NOT (cast(LAT#74586 as int) = 0) AND NOT (cast(LON#74587 as int) = 0))
:        +- Relation [DR_NO#74560,Date Rptd#74561,DATE OCC#74562,TIME OCC#74563,AREA #74564,AREA NAME#74565,Rpt Dist No#74566,Part 1-2#74567,Crm Cd#74568,Crm Cd Desc#74569,Mocodes#74570,Vict Age#74571,Vict Sex#74572,Vict Descent#74573,Premis Cd#74574,Premis Desc#74575,Weapon Used Cd#74576,Weapon Desc#74577,Status#74578,Status Desc#74579,Crm Cd 1#74580,Crm Cd 2#74581,Crm Cd 3#74582,Crm Cd 4#74583,... 4 more fields] csv
+- ResolvedHint (strategy=shuffle_replicate_nl)
   +- Filter (((HOUSING10#74275L >= cast(0 as bigint)) AND (POP_2010#74278L >= cast(0 as bigint))) AND (CITY#74267 = Los Angeles))
      +- Project [properties#74257.BG10 AS BG10#74262, properties#74257.BG10FIP10 AS BG10FIP10#74263, properties#74257.BG12 AS BG12#74264, properties#74257.CB10 AS CB10#74265, properties#74257.CEN_FIP13 AS CEN_FIP13#74266, properties#74257.CITY AS CITY#74267, properties#74257.CITYCOM AS CITYCOM#74268, properties#74257.COMM AS COMM#74269, properties#74257.CT10 AS CT10#74270, properties#74257.CT12 AS CT12#74271, properties#74257.CTCB10 AS CTCB10#74272, properties#74257.HD_2012 AS HD_2012#74273L, properties#74257.HD_NAME AS HD_NAME#74274, properties#74257.HOUSING10 AS HOUSING10#74275L, properties#74257.LA_FIP10 AS LA_FIP10#74276, properties#74257.OBJECTID AS OBJECTID#74277L, properties#74257.POP_2010 AS POP_2010#74278L, properties#74257.PUMA10 AS PUMA10#74279, properties#74257.SPA_2012 AS SPA_2012#74280L, properties#74257.SPA_NAME AS SPA_NAME#74281, properties#74257.SUP_DIST AS SUP_DIST#74282, properties#74257.SUP_LABEL AS SUP_LABEL#74283, properties#74257.ShapeSTArea AS ShapeSTArea#74284, properties#74257.ShapeSTLength AS ShapeSTLength#74285, ... 2 more fields]
         +- Project [features#74253.geometry AS geometry#74256, features#74253.properties AS properties#74257, features#74253.type AS type#74258]
            +- Project [features#74253]
               +- Generate explode(features#74245), false, [features#74253]
                  +- Relation [crs#74244,features#74245,name#74246,type#74247] geojson

== Optimized Logical Plan ==
Join Inner,  **org.apache.spark.sql.sedona_sql.expressions.ST_Within**  , rightHint=(strategy=shuffle_replicate_nl)
:- Project [DR_NO#74560, LAT#74586, LON#74587,  **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#74620]
:  +- Filter (((isnotnull(LAT#74586) AND isnotnull(LON#74587)) AND (NOT (cast(LAT#74586 as int) = 0) AND NOT (cast(LON#74587 as int) = 0))) AND isnotnull( **org.apache.spark.sql.sedona_sql.expressions.ST_Point**  ))
:     +- Relation [DR_NO#74560,Date Rptd#74561,DATE OCC#74562,TIME OCC#74563,AREA #74564,AREA NAME#74565,Rpt Dist No#74566,Part 1-2#74567,Crm Cd#74568,Crm Cd Desc#74569,Mocodes#74570,Vict Age#74571,Vict Sex#74572,Vict Descent#74573,Premis Cd#74574,Premis Desc#74575,Weapon Used Cd#74576,Weapon Desc#74577,Status#74578,Status Desc#74579,Crm Cd 1#74580,Crm Cd 2#74581,Crm Cd 3#74582,Crm Cd 4#74583,... 4 more fields] csv
+- Project [features#74253.properties.BG10 AS BG10#74262, features#74253.properties.BG10FIP10 AS BG10FIP10#74263, features#74253.properties.BG12 AS BG12#74264, features#74253.properties.CB10 AS CB10#74265, features#74253.properties.CEN_FIP13 AS CEN_FIP13#74266, features#74253.properties.CITY AS CITY#74267, features#74253.properties.CITYCOM AS CITYCOM#74268, features#74253.properties.COMM AS COMM#74269, features#74253.properties.CT10 AS CT10#74270, features#74253.properties.CT12 AS CT12#74271, features#74253.properties.CTCB10 AS CTCB10#74272, features#74253.properties.HD_2012 AS HD_2012#74273L, features#74253.properties.HD_NAME AS HD_NAME#74274, features#74253.properties.HOUSING10 AS HOUSING10#74275L, features#74253.properties.LA_FIP10 AS LA_FIP10#74276, features#74253.properties.OBJECTID AS OBJECTID#74277L, features#74253.properties.POP_2010 AS POP_2010#74278L, features#74253.properties.PUMA10 AS PUMA10#74279, features#74253.properties.SPA_2012 AS SPA_2012#74280L, features#74253.properties.SPA_NAME AS SPA_NAME#74281, features#74253.properties.SUP_DIST AS SUP_DIST#74282, features#74253.properties.SUP_LABEL AS SUP_LABEL#74283, features#74253.properties.ShapeSTArea AS ShapeSTArea#74284, features#74253.properties.ShapeSTLength AS ShapeSTLength#74285, ... 2 more fields]
   +- Filter ((((isnotnull(features#74253.properties.HOUSING10) AND isnotnull(features#74253.properties.POP_2010)) AND isnotnull(features#74253.properties.CITY)) AND (((features#74253.properties.HOUSING10 >= 0) AND (features#74253.properties.POP_2010 >= 0)) AND (features#74253.properties.CITY = Los Angeles))) AND isnotnull(features#74253.geometry))
      +- Generate explode(features#74245), [0], false, [features#74253]
         +- Project [features#74245]
            +- Filter ((size(features#74245, true) > 0) AND isnotnull(features#74245))
               +- Relation [crs#74244,features#74245,name#74246,type#74247] geojson

== Physical Plan ==
RangeJoin geom#74620: geometry, geometry#74256: geometry, WITHIN
:- Project [DR_NO#74560, LAT#74586, LON#74587,  **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#74620]
:  +- Filter ((((isnotnull(LAT#74586) AND isnotnull(LON#74587)) AND NOT (cast(LAT#74586 as int) = 0)) AND NOT (cast(LON#74587 as int) = 0)) AND isnotnull( **org.apache.spark.sql.sedona_sql.expressions.ST_Point**  ))
:     +- FileScan csv [DR_NO#74560,LAT#74586,LON#74587] Batched: false, DataFilters: [isnotnull(LAT#74586), isnotnull(LON#74587), NOT (cast(LAT#74586 as int) = 0), NOT (cast(LON#7458..., Format: CSV, Location: InMemoryFileIndex(2 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/CrimeData/Crime_D..., PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<DR_NO:string,LAT:string,LON:string>
+- *(1) Project [features#74253.properties.BG10 AS BG10#74262, features#74253.properties.BG10FIP10 AS BG10FIP10#74263, features#74253.properties.BG12 AS BG12#74264, features#74253.properties.CB10 AS CB10#74265, features#74253.properties.CEN_FIP13 AS CEN_FIP13#74266, features#74253.properties.CITY AS CITY#74267, features#74253.properties.CITYCOM AS CITYCOM#74268, features#74253.properties.COMM AS COMM#74269, features#74253.properties.CT10 AS CT10#74270, features#74253.properties.CT12 AS CT12#74271, features#74253.properties.CTCB10 AS CTCB10#74272, features#74253.properties.HD_2012 AS HD_2012#74273L, features#74253.properties.HD_NAME AS HD_NAME#74274, features#74253.properties.HOUSING10 AS HOUSING10#74275L, features#74253.properties.LA_FIP10 AS LA_FIP10#74276, features#74253.properties.OBJECTID AS OBJECTID#74277L, features#74253.properties.POP_2010 AS POP_2010#74278L, features#74253.properties.PUMA10 AS PUMA10#74279, features#74253.properties.SPA_2012 AS SPA_2012#74280L, features#74253.properties.SPA_NAME AS SPA_NAME#74281, features#74253.properties.SUP_DIST AS SUP_DIST#74282, features#74253.properties.SUP_LABEL AS SUP_LABEL#74283, features#74253.properties.ShapeSTArea AS ShapeSTArea#74284, features#74253.properties.ShapeSTLength AS ShapeSTLength#74285, ... 2 more fields]
   +- *(1) Filter ((((isnotnull(features#74253.properties.HOUSING10) AND isnotnull(features#74253.properties.POP_2010)) AND isnotnull(features#74253.properties.CITY)) AND (((features#74253.properties.HOUSING10 >= 0) AND (features#74253.properties.POP_2010 >= 0)) AND (features#74253.properties.CITY = Los Angeles))) AND isnotnull(features#74253.geometry))
      +- *(1) Generate explode(features#74245), false, [features#74253]
         +- *(1) Filter ((size(features#74245, true) > 0) AND isnotnull(features#74245))
            +- FileScan geojson [features#74245] Batched: false, DataFilters: [(size(features#74245, true) > 0), isnotnull(features#74245)], Format: GEOJSON, Location: InMemoryFileIndex(1 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/2010_Census_Block..., PartitionFilters: [], PushedFilters: [IsNotNull(features)], ReadSchema: struct<features:array<struct<geometry:binary,properties:struct<BG10:string,BG10FIP10:string,BG12:..."
