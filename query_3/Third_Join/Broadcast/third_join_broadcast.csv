Join Strategy,Elapsed Time (sec),Execution Plan
BROADCAST,17.578678369522095,"== Physical Plan ==
AdaptiveSparkPlan (36)
+- Project (35)
   +- SortMergeJoin FullOuter (34)
      :- Sort (18)
      :  +- HashAggregate (17)
      :     +- Exchange (16)
      :        +- HashAggregate (15)
      :           +- Project (14)
      :              +- BroadcastHashJoin Inner BuildRight (13)
      :                 :- HashAggregate (8)
      :                 :  +- Exchange (7)
      :                 :     +- HashAggregate (6)
      :                 :        +- Project (5)
      :                 :           +- Filter (4)
      :                 :              +- Generate (3)
      :                 :                 +- Filter (2)
      :                 :                    +- Scan geojson  (1)
      :                 +- BroadcastExchange (12)
      :                    +- Project (11)
      :                       +- Filter (10)
      :                          +- Scan csv  (9)
      +- Sort (33)
         +- HashAggregate (32)
            +- Exchange (31)
               +- HashAggregate (30)
                  +- Project (29)
                     +- BroadcastIndexJoin (28)
                        :- Project (21)
                        :  +- Filter (20)
                        :     +- Scan csv  (19)
                        +- SpatialIndex (27)
                           +- Project (26)
                              +- Filter (25)
                                 +- Generate (24)
                                    +- Filter (23)
                                       +- Scan geojson  (22)


(1) Scan geojson 
Output [1]: [features#784]
Batched: false
Location: InMemoryFileIndex [s3://initial-notebook-data-bucket-dblab-905418150721/2010_Census_Blocks.geojson]
PushedFilters: [IsNotNull(features)]
ReadSchema: struct<features:array<struct<geometry:binary,properties:struct<BG10:string,BG10FIP10:string,BG12:string,CB10:string,CEN_FIP13:string,CITY:string,CITYCOM:string,COMM:string,CT10:string,CT12:string,CTCB10:string,HD_2012:bigint,HD_NAME:string,HOUSING10:bigint,LA_FIP10:string,OBJECTID:bigint,POP_2010:bigint,PUMA10:string,SPA_2012:bigint,SPA_NAME:string,SUP_DIST:string,SUP_LABEL:string,ShapeSTArea:double,ShapeSTLength:double,ZCTA10:string>,type:string>>>

(2) Filter
Input [1]: [features#784]
Condition : ((size(features#784, true) > 0) AND isnotnull(features#784))

(3) Generate
Input [1]: [features#784]
Arguments: explode(features#784), false, [features#792]

(4) Filter
Input [1]: [features#792]
Condition : ((((isnotnull(features#792.properties.HOUSING10) AND isnotnull(features#792.properties.POP_2010)) AND isnotnull(features#792.properties.CITY)) AND (((features#792.properties.HOUSING10 >= 0) AND (features#792.properties.POP_2010 >= 0)) AND (features#792.properties.CITY = Los Angeles))) AND isnotnull(features#792.properties.ZCTA10))

(5) Project
Output [4]: [features#792.properties.COMM AS COMM#808, features#792.properties.HOUSING10 AS HOUSING10#814L, features#792.properties.POP_2010 AS POP_2010#817L, features#792.properties.ZCTA10 AS ZCTA10#825]
Input [1]: [features#792]

(6) HashAggregate
Input [4]: [COMM#808, HOUSING10#814L, POP_2010#817L, ZCTA10#825]
Keys [2]: [COMM#808, ZCTA10#825]
Functions [2]: [partial_sum(HOUSING10#814L), partial_sum(POP_2010#817L)]
Aggregate Attributes [2]: [sum#1031L, sum#1033L]
Results [4]: [COMM#808, ZCTA10#825, sum#1032L, sum#1034L]

(7) Exchange
Input [4]: [COMM#808, ZCTA10#825, sum#1032L, sum#1034L]
Arguments: hashpartitioning(COMM#808, ZCTA10#825, 1000), ENSURE_REQUIREMENTS, [plan_id=2385]

(8) HashAggregate
Input [4]: [COMM#808, ZCTA10#825, sum#1032L, sum#1034L]
Keys [2]: [COMM#808, ZCTA10#825]
Functions [2]: [sum(HOUSING10#814L), sum(POP_2010#817L)]
Aggregate Attributes [2]: [sum(HOUSING10#814L)#992L, sum(POP_2010#817L)#994L]
Results [4]: [COMM#808, ZCTA10#825, sum(HOUSING10#814L)#992L AS total_houses#993L, sum(POP_2010#817L)#994L AS total_pop#995L]

(9) Scan csv 
Output [2]: [Zip Code#947, Estimated Median Income#949]
Batched: false
Location: InMemoryFileIndex [s3://initial-notebook-data-bucket-dblab-905418150721/LA_income_2015.csv]
PushedFilters: [IsNotNull(Zip Code)]
ReadSchema: struct<Zip Code:int,Estimated Median Income:string>

(10) Filter
Input [2]: [Zip Code#947, Estimated Median Income#949]
Condition : isnotnull(Zip Code#947)

(11) Project
Output [2]: [Zip Code#947, cast(regexp_replace(regexp_replace(Estimated Median Income#949, \\$, , 1), ,, , 1) as decimal(10,0)) AS Estimated Median Income#962]
Input [2]: [Zip Code#947, Estimated Median Income#949]

(12) BroadcastExchange
Input [2]: [Zip Code#947, Estimated Median Income#962]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2388]

(13) BroadcastHashJoin
Left keys [1]: [cast(ZCTA10#825 as int)]
Right keys [1]: [Zip Code#947]
Join type: Inner
Join condition: None

(14) Project
Output [3]: [COMM#808, total_pop#995L, (cast(total_houses#993L as decimal(20,0)) * Estimated Median Income#962) AS total_money#1014]
Input [6]: [COMM#808, ZCTA10#825, total_houses#993L, total_pop#995L, Zip Code#947, Estimated Median Income#962]

(15) HashAggregate
Input [3]: [COMM#808, total_pop#995L, total_money#1014]
Keys [1]: [COMM#808]
Functions [2]: [partial_sum(total_money#1014), partial_sum(total_pop#995L)]
Aggregate Attributes [3]: [sum#1453, isEmpty#1454, sum#1457L]
Results [4]: [COMM#808, sum#1455, isEmpty#1456, sum#1458L]

(16) Exchange
Input [4]: [COMM#808, sum#1455, isEmpty#1456, sum#1458L]
Arguments: hashpartitioning(COMM#808, 1000), ENSURE_REQUIREMENTS, [plan_id=2393]

(17) HashAggregate
Input [4]: [COMM#808, sum#1455, isEmpty#1456, sum#1458L]
Keys [1]: [COMM#808]
Functions [2]: [sum(total_money#1014), sum(total_pop#995L)]
Aggregate Attributes [2]: [sum(total_money#1014)#1077, sum(total_pop#995L)#1079L]
Results [3]: [COMM#808, sum(total_money#1014)#1077 AS total_money#1078, sum(total_pop#995L)#1079L AS total_pop#1080L]

(18) Sort
Input [3]: [COMM#808, total_money#1078, total_pop#1080L]
Arguments: [COMM#808 ASC NULLS FIRST], false, 0

(19) Scan csv 
Output [2]: [LAT#1128, LON#1129]
Batched: false
Location: InMemoryFileIndex [s3://initial-notebook-data-bucket-dblab-905418150721/CrimeData/Crime_Data_from_2010_to_2019_20241101.csv, ... 1 entries]
PushedFilters: [IsNotNull(LAT), IsNotNull(LON)]
ReadSchema: struct<LAT:string,LON:string>

(20) Filter
Input [2]: [LAT#1128, LON#1129]
Condition : ((((isnotnull(LAT#1128) AND isnotnull(LON#1129)) AND NOT (cast(LAT#1128 as int) = 0)) AND NOT (cast(LON#1129 as int) = 0)) AND isnotnull( **org.apache.spark.sql.sedona_sql.expressions.ST_Point**  ))

(21) Project
Output [1]: [ **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#1162]
Input [2]: [LAT#1128, LON#1129]

(22) Scan geojson 
Output [1]: [features#1400]
Batched: false
Location: InMemoryFileIndex [s3://initial-notebook-data-bucket-dblab-905418150721/2010_Census_Blocks.geojson]
PushedFilters: [IsNotNull(features)]
ReadSchema: struct<features:array<struct<geometry:binary,properties:struct<BG10:string,BG10FIP10:string,BG12:string,CB10:string,CEN_FIP13:string,CITY:string,CITYCOM:string,COMM:string,CT10:string,CT12:string,CTCB10:string,HD_2012:bigint,HD_NAME:string,HOUSING10:bigint,LA_FIP10:string,OBJECTID:bigint,POP_2010:bigint,PUMA10:string,SPA_2012:bigint,SPA_NAME:string,SUP_DIST:string,SUP_LABEL:string,ShapeSTArea:double,ShapeSTLength:double,ZCTA10:string>,type:string>>>

(23) Filter
Input [1]: [features#1400]
Condition : ((size(features#1400, true) > 0) AND isnotnull(features#1400))

(24) Generate
Input [1]: [features#1400]
Arguments: explode(features#1400), false, [features#792]

(25) Filter
Input [1]: [features#792]
Condition : ((((isnotnull(features#792.properties.HOUSING10) AND isnotnull(features#792.properties.POP_2010)) AND isnotnull(features#792.properties.CITY)) AND (((features#792.properties.HOUSING10 >= 0) AND (features#792.properties.POP_2010 >= 0)) AND (features#792.properties.CITY = Los Angeles))) AND isnotnull(features#792.geometry))

(26) Project
Output [2]: [features#792.properties.COMM AS COMM#1410, features#792.geometry AS geometry#795]
Input [1]: [features#792]

(27) SpatialIndex
Arguments: geometry#795: geometry, RTREE, false, false

(28) BroadcastIndexJoin
Arguments: geom#1162: geometry, RightSide, LeftSide, Inner, WITHIN

(29) Project
Output [1]: [COMM#1410]
Input [3]: [geom#1162, COMM#1410, geometry#795]

(30) HashAggregate
Input [1]: [COMM#1410]
Keys [1]: [COMM#1410]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#1459L]
Results [2]: [COMM#1410, count#1460L]

(31) Exchange
Input [2]: [COMM#1410, count#1460L]
Arguments: hashpartitioning(COMM#1410, 1000), ENSURE_REQUIREMENTS, [plan_id=2395]

(32) HashAggregate
Input [2]: [COMM#1410, count#1460L]
Keys [1]: [COMM#1410]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#1395L]
Results [2]: [COMM#1410, count(1)#1395L AS count#1396L]

(33) Sort
Input [2]: [COMM#1410, count#1396L]
Arguments: [COMM#1410 ASC NULLS FIRST], false, 0

(34) SortMergeJoin
Left keys [1]: [COMM#808]
Right keys [1]: [COMM#1410]
Join type: FullOuter
Join condition: None

(35) Project
Output [3]: [COMM#808, (total_money#1078 / cast(total_pop#1080L as decimal(20,0))) AS Annual Average Income Per Person ($)#1439, (cast(count#1396L as double) / cast(total_pop#1080L as double)) AS Rate of Total Crimes Per Person#1440]
Input [5]: [COMM#808, total_money#1078, total_pop#1080L, COMM#1410, count#1396L]

(36) AdaptiveSparkPlan
Output [3]: [COMM#808, Annual Average Income Per Person ($)#1439, Rate of Total Crimes Per Person#1440]
Arguments: isFinalPlan=false"
