Description,Details
Execution Plan,"== Parsed Logical Plan ==
'Project [COMM#72651, ('total_money / 'total_pop) AS Annual Average Income Per Person ($)#73276, ('count / 'total_pop) AS Rate of Total Crimes Per Person#73277]
+- Join FullOuter, (COMM#72651 = COMM#73247)
   :- Aggregate [COMM#72651], [COMM#72651, sum(total_money#72857) AS total_money#72918, sum(total_pop#72838L) AS total_pop#72920L]
   :  +- Project [ZCTA10#72668, COMM#72651, total_pop#72838L, (cast(total_houses#72836L as decimal(20,0)) * Estimated Median Income#72805) AS total_money#72857]
   :     +- Join Inner, (cast(ZCTA10#72668 as int) = Zip Code#72790)
   :        :- Aggregate [COMM#72651, ZCTA10#72668], [COMM#72651, ZCTA10#72668, sum(HOUSING10#72657L) AS total_houses#72836L, sum(POP_2010#72660L) AS total_pop#72838L]
   :        :  +- Filter (((HOUSING10#72657L >= cast(0 as bigint)) AND (POP_2010#72660L >= cast(0 as bigint))) AND (CITY#72649 = Los Angeles))
   :        :     +- Project [properties#72639.BG10 AS BG10#72644, properties#72639.BG10FIP10 AS BG10FIP10#72645, properties#72639.BG12 AS BG12#72646, properties#72639.CB10 AS CB10#72647, properties#72639.CEN_FIP13 AS CEN_FIP13#72648, properties#72639.CITY AS CITY#72649, properties#72639.CITYCOM AS CITYCOM#72650, properties#72639.COMM AS COMM#72651, properties#72639.CT10 AS CT10#72652, properties#72639.CT12 AS CT12#72653, properties#72639.CTCB10 AS CTCB10#72654, properties#72639.HD_2012 AS HD_2012#72655L, properties#72639.HD_NAME AS HD_NAME#72656, properties#72639.HOUSING10 AS HOUSING10#72657L, properties#72639.LA_FIP10 AS LA_FIP10#72658, properties#72639.OBJECTID AS OBJECTID#72659L, properties#72639.POP_2010 AS POP_2010#72660L, properties#72639.PUMA10 AS PUMA10#72661, properties#72639.SPA_2012 AS SPA_2012#72662L, properties#72639.SPA_NAME AS SPA_NAME#72663, properties#72639.SUP_DIST AS SUP_DIST#72664, properties#72639.SUP_LABEL AS SUP_LABEL#72665, properties#72639.ShapeSTArea AS ShapeSTArea#72666, properties#72639.ShapeSTLength AS ShapeSTLength#72667, ... 2 more fields]
   :        :        +- Project [features#72635.geometry AS geometry#72638, features#72635.properties AS properties#72639, features#72635.type AS type#72640]
   :        :           +- Project [features#72635]
   :        :              +- Generate explode(features#72627), false, [features#72635]
   :        :                 +- Relation [crs#72626,features#72627,name#72628,type#72629] geojson
   :        +- ResolvedHint (strategy=merge)
   :           +- Project [Zip Code#72790, Community#72791, cast(Estimated Median Income#72801 as decimal(10,0)) AS Estimated Median Income#72805]
   :              +- Project [Zip Code#72790, Community#72791, regexp_replace(Estimated Median Income#72796, ,, , 1) AS Estimated Median Income#72801]
   :                 +- Project [Zip Code#72790, Community#72791, regexp_replace(Estimated Median Income#72792, \\$, , 1) AS Estimated Median Income#72796]
   :                    +- Relation [Zip Code#72790,Community#72791,Estimated Median Income#72792] csv
   +- ResolvedHint (strategy=merge)
      +- Aggregate [COMM#73247], [COMM#73247, count(1) AS count#73233L]
         +- Join Inner,  **org.apache.spark.sql.sedona_sql.expressions.ST_Within**
            :- Project [DR_NO#72942, LAT#72968, LON#72969,  **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#73002]
            :  +- Project [DR_NO#72942, LAT#72968, LON#72969]
            :     +- Filter (NOT (cast(LAT#72968 as int) = 0) AND NOT (cast(LON#72969 as int) = 0))
            :        +- Relation [DR_NO#72942,Date Rptd#72943,DATE OCC#72944,TIME OCC#72945,AREA #72946,AREA NAME#72947,Rpt Dist No#72948,Part 1-2#72949,Crm Cd#72950,Crm Cd Desc#72951,Mocodes#72952,Vict Age#72953,Vict Sex#72954,Vict Descent#72955,Premis Cd#72956,Premis Desc#72957,Weapon Used Cd#72958,Weapon Desc#72959,Status#72960,Status Desc#72961,Crm Cd 1#72962,Crm Cd 2#72963,Crm Cd 3#72964,Crm Cd 4#72965,... 4 more fields] csv
            +- ResolvedHint (strategy=merge)
               +- Filter (((HOUSING10#73253L >= cast(0 as bigint)) AND (POP_2010#73256L >= cast(0 as bigint))) AND (CITY#73245 = Los Angeles))
                  +- Project [properties#72639.BG10 AS BG10#73240, properties#72639.BG10FIP10 AS BG10FIP10#73241, properties#72639.BG12 AS BG12#73242, properties#72639.CB10 AS CB10#73243, properties#72639.CEN_FIP13 AS CEN_FIP13#73244, properties#72639.CITY AS CITY#73245, properties#72639.CITYCOM AS CITYCOM#73246, properties#72639.COMM AS COMM#73247, properties#72639.CT10 AS CT10#73248, properties#72639.CT12 AS CT12#73249, properties#72639.CTCB10 AS CTCB10#73250, properties#72639.HD_2012 AS HD_2012#73251L, properties#72639.HD_NAME AS HD_NAME#73252, properties#72639.HOUSING10 AS HOUSING10#73253L, properties#72639.LA_FIP10 AS LA_FIP10#73254, properties#72639.OBJECTID AS OBJECTID#73255L, properties#72639.POP_2010 AS POP_2010#73256L, properties#72639.PUMA10 AS PUMA10#73257, properties#72639.SPA_2012 AS SPA_2012#73258L, properties#72639.SPA_NAME AS SPA_NAME#73259, properties#72639.SUP_DIST AS SUP_DIST#73260, properties#72639.SUP_LABEL AS SUP_LABEL#73261, properties#72639.ShapeSTArea AS ShapeSTArea#73262, properties#72639.ShapeSTLength AS ShapeSTLength#73263, ... 2 more fields]
                     +- Project [features#72635.geometry AS geometry#72638, features#72635.properties AS properties#72639, features#72635.type AS type#72640]
                        +- Project [features#72635]
                           +- Generate explode(features#73237), false, [features#72635]
                              +- Relation [crs#73236,features#73237,name#73238,type#73239] geojson

== Analyzed Logical Plan ==
COMM: string, Annual Average Income Per Person ($): decimal(38,6), Rate of Total Crimes Per Person: double
Project [COMM#72651, (total_money#72918 / cast(total_pop#72920L as decimal(20,0))) AS Annual Average Income Per Person ($)#73276, (cast(count#73233L as double) / cast(total_pop#72920L as double)) AS Rate of Total Crimes Per Person#73277]
+- Join FullOuter, (COMM#72651 = COMM#73247)
   :- Aggregate [COMM#72651], [COMM#72651, sum(total_money#72857) AS total_money#72918, sum(total_pop#72838L) AS total_pop#72920L]
   :  +- Project [ZCTA10#72668, COMM#72651, total_pop#72838L, (cast(total_houses#72836L as decimal(20,0)) * Estimated Median Income#72805) AS total_money#72857]
   :     +- Join Inner, (cast(ZCTA10#72668 as int) = Zip Code#72790)
   :        :- Aggregate [COMM#72651, ZCTA10#72668], [COMM#72651, ZCTA10#72668, sum(HOUSING10#72657L) AS total_houses#72836L, sum(POP_2010#72660L) AS total_pop#72838L]
   :        :  +- Filter (((HOUSING10#72657L >= cast(0 as bigint)) AND (POP_2010#72660L >= cast(0 as bigint))) AND (CITY#72649 = Los Angeles))
   :        :     +- Project [properties#72639.BG10 AS BG10#72644, properties#72639.BG10FIP10 AS BG10FIP10#72645, properties#72639.BG12 AS BG12#72646, properties#72639.CB10 AS CB10#72647, properties#72639.CEN_FIP13 AS CEN_FIP13#72648, properties#72639.CITY AS CITY#72649, properties#72639.CITYCOM AS CITYCOM#72650, properties#72639.COMM AS COMM#72651, properties#72639.CT10 AS CT10#72652, properties#72639.CT12 AS CT12#72653, properties#72639.CTCB10 AS CTCB10#72654, properties#72639.HD_2012 AS HD_2012#72655L, properties#72639.HD_NAME AS HD_NAME#72656, properties#72639.HOUSING10 AS HOUSING10#72657L, properties#72639.LA_FIP10 AS LA_FIP10#72658, properties#72639.OBJECTID AS OBJECTID#72659L, properties#72639.POP_2010 AS POP_2010#72660L, properties#72639.PUMA10 AS PUMA10#72661, properties#72639.SPA_2012 AS SPA_2012#72662L, properties#72639.SPA_NAME AS SPA_NAME#72663, properties#72639.SUP_DIST AS SUP_DIST#72664, properties#72639.SUP_LABEL AS SUP_LABEL#72665, properties#72639.ShapeSTArea AS ShapeSTArea#72666, properties#72639.ShapeSTLength AS ShapeSTLength#72667, ... 2 more fields]
   :        :        +- Project [features#72635.geometry AS geometry#72638, features#72635.properties AS properties#72639, features#72635.type AS type#72640]
   :        :           +- Project [features#72635]
   :        :              +- Generate explode(features#72627), false, [features#72635]
   :        :                 +- Relation [crs#72626,features#72627,name#72628,type#72629] geojson
   :        +- ResolvedHint (strategy=merge)
   :           +- Project [Zip Code#72790, Community#72791, cast(Estimated Median Income#72801 as decimal(10,0)) AS Estimated Median Income#72805]
   :              +- Project [Zip Code#72790, Community#72791, regexp_replace(Estimated Median Income#72796, ,, , 1) AS Estimated Median Income#72801]
   :                 +- Project [Zip Code#72790, Community#72791, regexp_replace(Estimated Median Income#72792, \\$, , 1) AS Estimated Median Income#72796]
   :                    +- Relation [Zip Code#72790,Community#72791,Estimated Median Income#72792] csv
   +- ResolvedHint (strategy=merge)
      +- Aggregate [COMM#73247], [COMM#73247, count(1) AS count#73233L]
         +- Join Inner,  **org.apache.spark.sql.sedona_sql.expressions.ST_Within**
            :- Project [DR_NO#72942, LAT#72968, LON#72969,  **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#73002]
            :  +- Project [DR_NO#72942, LAT#72968, LON#72969]
            :     +- Filter (NOT (cast(LAT#72968 as int) = 0) AND NOT (cast(LON#72969 as int) = 0))
            :        +- Relation [DR_NO#72942,Date Rptd#72943,DATE OCC#72944,TIME OCC#72945,AREA #72946,AREA NAME#72947,Rpt Dist No#72948,Part 1-2#72949,Crm Cd#72950,Crm Cd Desc#72951,Mocodes#72952,Vict Age#72953,Vict Sex#72954,Vict Descent#72955,Premis Cd#72956,Premis Desc#72957,Weapon Used Cd#72958,Weapon Desc#72959,Status#72960,Status Desc#72961,Crm Cd 1#72962,Crm Cd 2#72963,Crm Cd 3#72964,Crm Cd 4#72965,... 4 more fields] csv
            +- ResolvedHint (strategy=merge)
               +- Filter (((HOUSING10#73253L >= cast(0 as bigint)) AND (POP_2010#73256L >= cast(0 as bigint))) AND (CITY#73245 = Los Angeles))
                  +- Project [properties#72639.BG10 AS BG10#73240, properties#72639.BG10FIP10 AS BG10FIP10#73241, properties#72639.BG12 AS BG12#73242, properties#72639.CB10 AS CB10#73243, properties#72639.CEN_FIP13 AS CEN_FIP13#73244, properties#72639.CITY AS CITY#73245, properties#72639.CITYCOM AS CITYCOM#73246, properties#72639.COMM AS COMM#73247, properties#72639.CT10 AS CT10#73248, properties#72639.CT12 AS CT12#73249, properties#72639.CTCB10 AS CTCB10#73250, properties#72639.HD_2012 AS HD_2012#73251L, properties#72639.HD_NAME AS HD_NAME#73252, properties#72639.HOUSING10 AS HOUSING10#73253L, properties#72639.LA_FIP10 AS LA_FIP10#73254, properties#72639.OBJECTID AS OBJECTID#73255L, properties#72639.POP_2010 AS POP_2010#73256L, properties#72639.PUMA10 AS PUMA10#73257, properties#72639.SPA_2012 AS SPA_2012#73258L, properties#72639.SPA_NAME AS SPA_NAME#73259, properties#72639.SUP_DIST AS SUP_DIST#73260, properties#72639.SUP_LABEL AS SUP_LABEL#73261, properties#72639.ShapeSTArea AS ShapeSTArea#73262, properties#72639.ShapeSTLength AS ShapeSTLength#73263, ... 2 more fields]
                     +- Project [features#72635.geometry AS geometry#72638, features#72635.properties AS properties#72639, features#72635.type AS type#72640]
                        +- Project [features#72635]
                           +- Generate explode(features#73237), false, [features#72635]
                              +- Relation [crs#73236,features#73237,name#73238,type#73239] geojson

== Optimized Logical Plan ==
Project [COMM#72651, (total_money#72918 / cast(total_pop#72920L as decimal(20,0))) AS Annual Average Income Per Person ($)#73276, (cast(count#73233L as double) / cast(total_pop#72920L as double)) AS Rate of Total Crimes Per Person#73277]
+- Join FullOuter, (COMM#72651 = COMM#73247), rightHint=(strategy=merge)
   :- Aggregate [COMM#72651], [COMM#72651, sum(total_money#72857) AS total_money#72918, sum(total_pop#72838L) AS total_pop#72920L]
   :  +- Project [COMM#72651, total_pop#72838L, (cast(total_houses#72836L as decimal(20,0)) * Estimated Median Income#72805) AS total_money#72857]
   :     +- Join Inner, (cast(ZCTA10#72668 as int) = Zip Code#72790), rightHint=(strategy=merge)
   :        :- Aggregate [COMM#72651, ZCTA10#72668], [COMM#72651, ZCTA10#72668, sum(HOUSING10#72657L) AS total_houses#72836L, sum(POP_2010#72660L) AS total_pop#72838L]
   :        :  +- Project [features#72635.properties.COMM AS COMM#72651, features#72635.properties.HOUSING10 AS HOUSING10#72657L, features#72635.properties.POP_2010 AS POP_2010#72660L, features#72635.properties.ZCTA10 AS ZCTA10#72668]
   :        :     +- Filter ((((isnotnull(features#72635.properties.HOUSING10) AND isnotnull(features#72635.properties.POP_2010)) AND isnotnull(features#72635.properties.CITY)) AND (((features#72635.properties.HOUSING10 >= 0) AND (features#72635.properties.POP_2010 >= 0)) AND (features#72635.properties.CITY = Los Angeles))) AND isnotnull(features#72635.properties.ZCTA10))
   :        :        +- Generate explode(features#72627), [0], false, [features#72635]
   :        :           +- Project [features#72627]
   :        :              +- Filter ((size(features#72627, true) > 0) AND isnotnull(features#72627))
   :        :                 +- Relation [crs#72626,features#72627,name#72628,type#72629] geojson
   :        +- Project [Zip Code#72790, cast(regexp_replace(regexp_replace(Estimated Median Income#72792, \\$, , 1), ,, , 1) as decimal(10,0)) AS Estimated Median Income#72805]
   :           +- Filter isnotnull(Zip Code#72790)
   :              +- Relation [Zip Code#72790,Community#72791,Estimated Median Income#72792] csv
   +- Aggregate [COMM#73247], [COMM#73247, count(1) AS count#73233L]
      +- Project [COMM#73247]
         +- Join Inner,  **org.apache.spark.sql.sedona_sql.expressions.ST_Within**  , rightHint=(strategy=merge)
            :- Project [ **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#73002]
            :  +- Filter (((isnotnull(LAT#72968) AND isnotnull(LON#72969)) AND (NOT (cast(LAT#72968 as int) = 0) AND NOT (cast(LON#72969 as int) = 0))) AND isnotnull( **org.apache.spark.sql.sedona_sql.expressions.ST_Point**  ))
            :     +- Relation [DR_NO#72942,Date Rptd#72943,DATE OCC#72944,TIME OCC#72945,AREA #72946,AREA NAME#72947,Rpt Dist No#72948,Part 1-2#72949,Crm Cd#72950,Crm Cd Desc#72951,Mocodes#72952,Vict Age#72953,Vict Sex#72954,Vict Descent#72955,Premis Cd#72956,Premis Desc#72957,Weapon Used Cd#72958,Weapon Desc#72959,Status#72960,Status Desc#72961,Crm Cd 1#72962,Crm Cd 2#72963,Crm Cd 3#72964,Crm Cd 4#72965,... 4 more fields] csv
            +- Project [features#72635.properties.COMM AS COMM#73247, features#72635.geometry AS geometry#72638]
               +- Filter ((((isnotnull(features#72635.properties.HOUSING10) AND isnotnull(features#72635.properties.POP_2010)) AND isnotnull(features#72635.properties.CITY)) AND (((features#72635.properties.HOUSING10 >= 0) AND (features#72635.properties.POP_2010 >= 0)) AND (features#72635.properties.CITY = Los Angeles))) AND isnotnull(features#72635.geometry))
                  +- Generate explode(features#73237), [0], false, [features#72635]
                     +- Project [features#73237]
                        +- Filter ((size(features#73237, true) > 0) AND isnotnull(features#73237))
                           +- Relation [crs#73236,features#73237,name#73238,type#73239] geojson

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Project [COMM#72651, (total_money#72918 / cast(total_pop#72920L as decimal(20,0))) AS Annual Average Income Per Person ($)#73276, (cast(count#73233L as double) / cast(total_pop#72920L as double)) AS Rate of Total Crimes Per Person#73277]
   +- SortMergeJoin [COMM#72651], [COMM#73247], FullOuter
      :- Sort [COMM#72651 ASC NULLS FIRST], false, 0
      :  +- HashAggregate(keys=[COMM#72651], functions=[sum(total_money#72857), sum(total_pop#72838L)], output=[COMM#72651, total_money#72918, total_pop#72920L], schema specialized)
      :     +- Exchange hashpartitioning(COMM#72651, 1000), ENSURE_REQUIREMENTS, [plan_id=45298]
      :        +- HashAggregate(keys=[COMM#72651], functions=[partial_sum(total_money#72857), partial_sum(total_pop#72838L)], output=[COMM#72651, sum#73292, isEmpty#73293, sum#73295L], schema specialized)
      :           +- Project [COMM#72651, total_pop#72838L, (cast(total_houses#72836L as decimal(20,0)) * Estimated Median Income#72805) AS total_money#72857]
      :              +- SortMergeJoin [cast(ZCTA10#72668 as int)], [Zip Code#72790], Inner
      :                 :- Sort [cast(ZCTA10#72668 as int) ASC NULLS FIRST], false, 0
      :                 :  +- Exchange hashpartitioning(cast(ZCTA10#72668 as int), 1000), ENSURE_REQUIREMENTS, [plan_id=45290]
      :                 :     +- HashAggregate(keys=[COMM#72651, ZCTA10#72668], functions=[sum(HOUSING10#72657L), sum(POP_2010#72660L)], output=[COMM#72651, ZCTA10#72668, total_houses#72836L, total_pop#72838L], schema specialized)
      :                 :        +- Exchange hashpartitioning(COMM#72651, ZCTA10#72668, 1000), ENSURE_REQUIREMENTS, [plan_id=45286]
      :                 :           +- HashAggregate(keys=[COMM#72651, ZCTA10#72668], functions=[partial_sum(HOUSING10#72657L), partial_sum(POP_2010#72660L)], output=[COMM#72651, ZCTA10#72668, sum#72875L, sum#72877L], schema specialized)
      :                 :              +- Project [features#72635.properties.COMM AS COMM#72651, features#72635.properties.HOUSING10 AS HOUSING10#72657L, features#72635.properties.POP_2010 AS POP_2010#72660L, features#72635.properties.ZCTA10 AS ZCTA10#72668]
      :                 :                 +- Filter ((((isnotnull(features#72635.properties.HOUSING10) AND isnotnull(features#72635.properties.POP_2010)) AND isnotnull(features#72635.properties.CITY)) AND (((features#72635.properties.HOUSING10 >= 0) AND (features#72635.properties.POP_2010 >= 0)) AND (features#72635.properties.CITY = Los Angeles))) AND isnotnull(features#72635.properties.ZCTA10))
      :                 :                    +- Generate explode(features#72627), false, [features#72635]
      :                 :                       +- Filter ((size(features#72627, true) > 0) AND isnotnull(features#72627))
      :                 :                          +- FileScan geojson [features#72627] Batched: false, DataFilters: [(size(features#72627, true) > 0), isnotnull(features#72627)], Format: GEOJSON, Location: InMemoryFileIndex(1 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/2010_Census_Block..., PartitionFilters: [], PushedFilters: [IsNotNull(features)], ReadSchema: struct<features:array<struct<geometry:binary,properties:struct<BG10:string,BG10FIP10:string,BG12:...
      :                 +- Sort [Zip Code#72790 ASC NULLS FIRST], false, 0
      :                    +- Exchange hashpartitioning(Zip Code#72790, 1000), ENSURE_REQUIREMENTS, [plan_id=45291]
      :                       +- Project [Zip Code#72790, cast(regexp_replace(regexp_replace(Estimated Median Income#72792, \\$, , 1), ,, , 1) as decimal(10,0)) AS Estimated Median Income#72805]
      :                          +- Filter isnotnull(Zip Code#72790)
      :                             +- FileScan csv [Zip Code#72790,Estimated Median Income#72792] Batched: false, DataFilters: [isnotnull(Zip Code#72790)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
      +- Sort [COMM#73247 ASC NULLS FIRST], false, 0
         +- HashAggregate(keys=[COMM#73247], functions=[count(1)], output=[COMM#73247, count#73233L], schema specialized)
            +- Exchange hashpartitioning(COMM#73247, 1000), ENSURE_REQUIREMENTS, [plan_id=45300]
               +- HashAggregate(keys=[COMM#73247], functions=[partial_count(1)], output=[COMM#73247, count#73297L], schema specialized)
                  +- Project [COMM#73247]
                     +- RangeJoin geom#73002: geometry, geometry#72638: geometry, WITHIN
                        :- Project [ **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#73002]
                        :  +- Filter ((((isnotnull(LAT#72968) AND isnotnull(LON#72969)) AND NOT (cast(LAT#72968 as int) = 0)) AND NOT (cast(LON#72969 as int) = 0)) AND isnotnull( **org.apache.spark.sql.sedona_sql.expressions.ST_Point**  ))
                        :     +- FileScan csv [LAT#72968,LON#72969] Batched: false, DataFilters: [isnotnull(LAT#72968), isnotnull(LON#72969), NOT (cast(LAT#72968 as int) = 0), NOT (cast(LON#7296..., Format: CSV, Location: InMemoryFileIndex(2 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/CrimeData/Crime_D..., PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:string,LON:string>
                        +- Project [features#72635.properties.COMM AS COMM#73247, features#72635.geometry AS geometry#72638]
                           +- Filter ((((isnotnull(features#72635.properties.HOUSING10) AND isnotnull(features#72635.properties.POP_2010)) AND isnotnull(features#72635.properties.CITY)) AND (((features#72635.properties.HOUSING10 >= 0) AND (features#72635.properties.POP_2010 >= 0)) AND (features#72635.properties.CITY = Los Angeles))) AND isnotnull(features#72635.geometry))
                              +- Generate explode(features#73237), false, [features#72635]
                                 +- Filter ((size(features#73237, true) > 0) AND isnotnull(features#73237))
                                    +- FileScan geojson [features#73237] Batched: false, DataFilters: [(size(features#73237, true) > 0), isnotnull(features#73237)], Format: GEOJSON, Location: InMemoryFileIndex(1 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/2010_Census_Block..., PartitionFilters: [], PushedFilters: [IsNotNull(features)], ReadSchema: struct<features:array<struct<geometry:binary,properties:struct<BG10:string,BG10FIP10:string,BG12:..."
