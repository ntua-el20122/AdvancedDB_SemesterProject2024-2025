Description,Details
Execution Plan,"== Parsed Logical Plan ==
'Project [COMM#73460, ('total_money / 'total_pop) AS Annual Average Income Per Person ($)#74085, ('count / 'total_pop) AS Rate of Total Crimes Per Person#74086]
+- Join FullOuter, (COMM#73460 = COMM#74056)
   :- Aggregate [COMM#73460], [COMM#73460, sum(total_money#73666) AS total_money#73727, sum(total_pop#73647L) AS total_pop#73729L]
   :  +- Project [ZCTA10#73477, COMM#73460, total_pop#73647L, (cast(total_houses#73645L as decimal(20,0)) * Estimated Median Income#73614) AS total_money#73666]
   :     +- Join Inner, (cast(ZCTA10#73477 as int) = Zip Code#73599)
   :        :- Aggregate [COMM#73460, ZCTA10#73477], [COMM#73460, ZCTA10#73477, sum(HOUSING10#73466L) AS total_houses#73645L, sum(POP_2010#73469L) AS total_pop#73647L]
   :        :  +- Filter (((HOUSING10#73466L >= cast(0 as bigint)) AND (POP_2010#73469L >= cast(0 as bigint))) AND (CITY#73458 = Los Angeles))
   :        :     +- Project [properties#73448.BG10 AS BG10#73453, properties#73448.BG10FIP10 AS BG10FIP10#73454, properties#73448.BG12 AS BG12#73455, properties#73448.CB10 AS CB10#73456, properties#73448.CEN_FIP13 AS CEN_FIP13#73457, properties#73448.CITY AS CITY#73458, properties#73448.CITYCOM AS CITYCOM#73459, properties#73448.COMM AS COMM#73460, properties#73448.CT10 AS CT10#73461, properties#73448.CT12 AS CT12#73462, properties#73448.CTCB10 AS CTCB10#73463, properties#73448.HD_2012 AS HD_2012#73464L, properties#73448.HD_NAME AS HD_NAME#73465, properties#73448.HOUSING10 AS HOUSING10#73466L, properties#73448.LA_FIP10 AS LA_FIP10#73467, properties#73448.OBJECTID AS OBJECTID#73468L, properties#73448.POP_2010 AS POP_2010#73469L, properties#73448.PUMA10 AS PUMA10#73470, properties#73448.SPA_2012 AS SPA_2012#73471L, properties#73448.SPA_NAME AS SPA_NAME#73472, properties#73448.SUP_DIST AS SUP_DIST#73473, properties#73448.SUP_LABEL AS SUP_LABEL#73474, properties#73448.ShapeSTArea AS ShapeSTArea#73475, properties#73448.ShapeSTLength AS ShapeSTLength#73476, ... 2 more fields]
   :        :        +- Project [features#73444.geometry AS geometry#73447, features#73444.properties AS properties#73448, features#73444.type AS type#73449]
   :        :           +- Project [features#73444]
   :        :              +- Generate explode(features#73436), false, [features#73444]
   :        :                 +- Relation [crs#73435,features#73436,name#73437,type#73438] geojson
   :        +- ResolvedHint (strategy=shuffle_hash)
   :           +- Project [Zip Code#73599, Community#73600, cast(Estimated Median Income#73610 as decimal(10,0)) AS Estimated Median Income#73614]
   :              +- Project [Zip Code#73599, Community#73600, regexp_replace(Estimated Median Income#73605, ,, , 1) AS Estimated Median Income#73610]
   :                 +- Project [Zip Code#73599, Community#73600, regexp_replace(Estimated Median Income#73601, \\$, , 1) AS Estimated Median Income#73605]
   :                    +- Relation [Zip Code#73599,Community#73600,Estimated Median Income#73601] csv
   +- ResolvedHint (strategy=shuffle_hash)
      +- Aggregate [COMM#74056], [COMM#74056, count(1) AS count#74042L]
         +- Join Inner,  **org.apache.spark.sql.sedona_sql.expressions.ST_Within**
            :- Project [DR_NO#73751, LAT#73777, LON#73778,  **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#73811]
            :  +- Project [DR_NO#73751, LAT#73777, LON#73778]
            :     +- Filter (NOT (cast(LAT#73777 as int) = 0) AND NOT (cast(LON#73778 as int) = 0))
            :        +- Relation [DR_NO#73751,Date Rptd#73752,DATE OCC#73753,TIME OCC#73754,AREA #73755,AREA NAME#73756,Rpt Dist No#73757,Part 1-2#73758,Crm Cd#73759,Crm Cd Desc#73760,Mocodes#73761,Vict Age#73762,Vict Sex#73763,Vict Descent#73764,Premis Cd#73765,Premis Desc#73766,Weapon Used Cd#73767,Weapon Desc#73768,Status#73769,Status Desc#73770,Crm Cd 1#73771,Crm Cd 2#73772,Crm Cd 3#73773,Crm Cd 4#73774,... 4 more fields] csv
            +- ResolvedHint (strategy=shuffle_hash)
               +- Filter (((HOUSING10#74062L >= cast(0 as bigint)) AND (POP_2010#74065L >= cast(0 as bigint))) AND (CITY#74054 = Los Angeles))
                  +- Project [properties#73448.BG10 AS BG10#74049, properties#73448.BG10FIP10 AS BG10FIP10#74050, properties#73448.BG12 AS BG12#74051, properties#73448.CB10 AS CB10#74052, properties#73448.CEN_FIP13 AS CEN_FIP13#74053, properties#73448.CITY AS CITY#74054, properties#73448.CITYCOM AS CITYCOM#74055, properties#73448.COMM AS COMM#74056, properties#73448.CT10 AS CT10#74057, properties#73448.CT12 AS CT12#74058, properties#73448.CTCB10 AS CTCB10#74059, properties#73448.HD_2012 AS HD_2012#74060L, properties#73448.HD_NAME AS HD_NAME#74061, properties#73448.HOUSING10 AS HOUSING10#74062L, properties#73448.LA_FIP10 AS LA_FIP10#74063, properties#73448.OBJECTID AS OBJECTID#74064L, properties#73448.POP_2010 AS POP_2010#74065L, properties#73448.PUMA10 AS PUMA10#74066, properties#73448.SPA_2012 AS SPA_2012#74067L, properties#73448.SPA_NAME AS SPA_NAME#74068, properties#73448.SUP_DIST AS SUP_DIST#74069, properties#73448.SUP_LABEL AS SUP_LABEL#74070, properties#73448.ShapeSTArea AS ShapeSTArea#74071, properties#73448.ShapeSTLength AS ShapeSTLength#74072, ... 2 more fields]
                     +- Project [features#73444.geometry AS geometry#73447, features#73444.properties AS properties#73448, features#73444.type AS type#73449]
                        +- Project [features#73444]
                           +- Generate explode(features#74046), false, [features#73444]
                              +- Relation [crs#74045,features#74046,name#74047,type#74048] geojson

== Analyzed Logical Plan ==
COMM: string, Annual Average Income Per Person ($): decimal(38,6), Rate of Total Crimes Per Person: double
Project [COMM#73460, (total_money#73727 / cast(total_pop#73729L as decimal(20,0))) AS Annual Average Income Per Person ($)#74085, (cast(count#74042L as double) / cast(total_pop#73729L as double)) AS Rate of Total Crimes Per Person#74086]
+- Join FullOuter, (COMM#73460 = COMM#74056)
   :- Aggregate [COMM#73460], [COMM#73460, sum(total_money#73666) AS total_money#73727, sum(total_pop#73647L) AS total_pop#73729L]
   :  +- Project [ZCTA10#73477, COMM#73460, total_pop#73647L, (cast(total_houses#73645L as decimal(20,0)) * Estimated Median Income#73614) AS total_money#73666]
   :     +- Join Inner, (cast(ZCTA10#73477 as int) = Zip Code#73599)
   :        :- Aggregate [COMM#73460, ZCTA10#73477], [COMM#73460, ZCTA10#73477, sum(HOUSING10#73466L) AS total_houses#73645L, sum(POP_2010#73469L) AS total_pop#73647L]
   :        :  +- Filter (((HOUSING10#73466L >= cast(0 as bigint)) AND (POP_2010#73469L >= cast(0 as bigint))) AND (CITY#73458 = Los Angeles))
   :        :     +- Project [properties#73448.BG10 AS BG10#73453, properties#73448.BG10FIP10 AS BG10FIP10#73454, properties#73448.BG12 AS BG12#73455, properties#73448.CB10 AS CB10#73456, properties#73448.CEN_FIP13 AS CEN_FIP13#73457, properties#73448.CITY AS CITY#73458, properties#73448.CITYCOM AS CITYCOM#73459, properties#73448.COMM AS COMM#73460, properties#73448.CT10 AS CT10#73461, properties#73448.CT12 AS CT12#73462, properties#73448.CTCB10 AS CTCB10#73463, properties#73448.HD_2012 AS HD_2012#73464L, properties#73448.HD_NAME AS HD_NAME#73465, properties#73448.HOUSING10 AS HOUSING10#73466L, properties#73448.LA_FIP10 AS LA_FIP10#73467, properties#73448.OBJECTID AS OBJECTID#73468L, properties#73448.POP_2010 AS POP_2010#73469L, properties#73448.PUMA10 AS PUMA10#73470, properties#73448.SPA_2012 AS SPA_2012#73471L, properties#73448.SPA_NAME AS SPA_NAME#73472, properties#73448.SUP_DIST AS SUP_DIST#73473, properties#73448.SUP_LABEL AS SUP_LABEL#73474, properties#73448.ShapeSTArea AS ShapeSTArea#73475, properties#73448.ShapeSTLength AS ShapeSTLength#73476, ... 2 more fields]
   :        :        +- Project [features#73444.geometry AS geometry#73447, features#73444.properties AS properties#73448, features#73444.type AS type#73449]
   :        :           +- Project [features#73444]
   :        :              +- Generate explode(features#73436), false, [features#73444]
   :        :                 +- Relation [crs#73435,features#73436,name#73437,type#73438] geojson
   :        +- ResolvedHint (strategy=shuffle_hash)
   :           +- Project [Zip Code#73599, Community#73600, cast(Estimated Median Income#73610 as decimal(10,0)) AS Estimated Median Income#73614]
   :              +- Project [Zip Code#73599, Community#73600, regexp_replace(Estimated Median Income#73605, ,, , 1) AS Estimated Median Income#73610]
   :                 +- Project [Zip Code#73599, Community#73600, regexp_replace(Estimated Median Income#73601, \\$, , 1) AS Estimated Median Income#73605]
   :                    +- Relation [Zip Code#73599,Community#73600,Estimated Median Income#73601] csv
   +- ResolvedHint (strategy=shuffle_hash)
      +- Aggregate [COMM#74056], [COMM#74056, count(1) AS count#74042L]
         +- Join Inner,  **org.apache.spark.sql.sedona_sql.expressions.ST_Within**
            :- Project [DR_NO#73751, LAT#73777, LON#73778,  **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#73811]
            :  +- Project [DR_NO#73751, LAT#73777, LON#73778]
            :     +- Filter (NOT (cast(LAT#73777 as int) = 0) AND NOT (cast(LON#73778 as int) = 0))
            :        +- Relation [DR_NO#73751,Date Rptd#73752,DATE OCC#73753,TIME OCC#73754,AREA #73755,AREA NAME#73756,Rpt Dist No#73757,Part 1-2#73758,Crm Cd#73759,Crm Cd Desc#73760,Mocodes#73761,Vict Age#73762,Vict Sex#73763,Vict Descent#73764,Premis Cd#73765,Premis Desc#73766,Weapon Used Cd#73767,Weapon Desc#73768,Status#73769,Status Desc#73770,Crm Cd 1#73771,Crm Cd 2#73772,Crm Cd 3#73773,Crm Cd 4#73774,... 4 more fields] csv
            +- ResolvedHint (strategy=shuffle_hash)
               +- Filter (((HOUSING10#74062L >= cast(0 as bigint)) AND (POP_2010#74065L >= cast(0 as bigint))) AND (CITY#74054 = Los Angeles))
                  +- Project [properties#73448.BG10 AS BG10#74049, properties#73448.BG10FIP10 AS BG10FIP10#74050, properties#73448.BG12 AS BG12#74051, properties#73448.CB10 AS CB10#74052, properties#73448.CEN_FIP13 AS CEN_FIP13#74053, properties#73448.CITY AS CITY#74054, properties#73448.CITYCOM AS CITYCOM#74055, properties#73448.COMM AS COMM#74056, properties#73448.CT10 AS CT10#74057, properties#73448.CT12 AS CT12#74058, properties#73448.CTCB10 AS CTCB10#74059, properties#73448.HD_2012 AS HD_2012#74060L, properties#73448.HD_NAME AS HD_NAME#74061, properties#73448.HOUSING10 AS HOUSING10#74062L, properties#73448.LA_FIP10 AS LA_FIP10#74063, properties#73448.OBJECTID AS OBJECTID#74064L, properties#73448.POP_2010 AS POP_2010#74065L, properties#73448.PUMA10 AS PUMA10#74066, properties#73448.SPA_2012 AS SPA_2012#74067L, properties#73448.SPA_NAME AS SPA_NAME#74068, properties#73448.SUP_DIST AS SUP_DIST#74069, properties#73448.SUP_LABEL AS SUP_LABEL#74070, properties#73448.ShapeSTArea AS ShapeSTArea#74071, properties#73448.ShapeSTLength AS ShapeSTLength#74072, ... 2 more fields]
                     +- Project [features#73444.geometry AS geometry#73447, features#73444.properties AS properties#73448, features#73444.type AS type#73449]
                        +- Project [features#73444]
                           +- Generate explode(features#74046), false, [features#73444]
                              +- Relation [crs#74045,features#74046,name#74047,type#74048] geojson

== Optimized Logical Plan ==
Project [COMM#73460, (total_money#73727 / cast(total_pop#73729L as decimal(20,0))) AS Annual Average Income Per Person ($)#74085, (cast(count#74042L as double) / cast(total_pop#73729L as double)) AS Rate of Total Crimes Per Person#74086]
+- Join FullOuter, (COMM#73460 = COMM#74056), rightHint=(strategy=shuffle_hash)
   :- Aggregate [COMM#73460], [COMM#73460, sum(total_money#73666) AS total_money#73727, sum(total_pop#73647L) AS total_pop#73729L]
   :  +- Project [COMM#73460, total_pop#73647L, (cast(total_houses#73645L as decimal(20,0)) * Estimated Median Income#73614) AS total_money#73666]
   :     +- Join Inner, (cast(ZCTA10#73477 as int) = Zip Code#73599), rightHint=(strategy=shuffle_hash)
   :        :- Aggregate [COMM#73460, ZCTA10#73477], [COMM#73460, ZCTA10#73477, sum(HOUSING10#73466L) AS total_houses#73645L, sum(POP_2010#73469L) AS total_pop#73647L]
   :        :  +- Project [features#73444.properties.COMM AS COMM#73460, features#73444.properties.HOUSING10 AS HOUSING10#73466L, features#73444.properties.POP_2010 AS POP_2010#73469L, features#73444.properties.ZCTA10 AS ZCTA10#73477]
   :        :     +- Filter ((((isnotnull(features#73444.properties.HOUSING10) AND isnotnull(features#73444.properties.POP_2010)) AND isnotnull(features#73444.properties.CITY)) AND (((features#73444.properties.HOUSING10 >= 0) AND (features#73444.properties.POP_2010 >= 0)) AND (features#73444.properties.CITY = Los Angeles))) AND isnotnull(features#73444.properties.ZCTA10))
   :        :        +- Generate explode(features#73436), [0], false, [features#73444]
   :        :           +- Project [features#73436]
   :        :              +- Filter ((size(features#73436, true) > 0) AND isnotnull(features#73436))
   :        :                 +- Relation [crs#73435,features#73436,name#73437,type#73438] geojson
   :        +- Project [Zip Code#73599, cast(regexp_replace(regexp_replace(Estimated Median Income#73601, \\$, , 1), ,, , 1) as decimal(10,0)) AS Estimated Median Income#73614]
   :           +- Filter isnotnull(Zip Code#73599)
   :              +- Relation [Zip Code#73599,Community#73600,Estimated Median Income#73601] csv
   +- Aggregate [COMM#74056], [COMM#74056, count(1) AS count#74042L]
      +- Project [COMM#74056]
         +- Join Inner,  **org.apache.spark.sql.sedona_sql.expressions.ST_Within**  , rightHint=(strategy=shuffle_hash)
            :- Project [ **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#73811]
            :  +- Filter (((isnotnull(LAT#73777) AND isnotnull(LON#73778)) AND (NOT (cast(LAT#73777 as int) = 0) AND NOT (cast(LON#73778 as int) = 0))) AND isnotnull( **org.apache.spark.sql.sedona_sql.expressions.ST_Point**  ))
            :     +- Relation [DR_NO#73751,Date Rptd#73752,DATE OCC#73753,TIME OCC#73754,AREA #73755,AREA NAME#73756,Rpt Dist No#73757,Part 1-2#73758,Crm Cd#73759,Crm Cd Desc#73760,Mocodes#73761,Vict Age#73762,Vict Sex#73763,Vict Descent#73764,Premis Cd#73765,Premis Desc#73766,Weapon Used Cd#73767,Weapon Desc#73768,Status#73769,Status Desc#73770,Crm Cd 1#73771,Crm Cd 2#73772,Crm Cd 3#73773,Crm Cd 4#73774,... 4 more fields] csv
            +- Project [features#73444.properties.COMM AS COMM#74056, features#73444.geometry AS geometry#73447]
               +- Filter ((((isnotnull(features#73444.properties.HOUSING10) AND isnotnull(features#73444.properties.POP_2010)) AND isnotnull(features#73444.properties.CITY)) AND (((features#73444.properties.HOUSING10 >= 0) AND (features#73444.properties.POP_2010 >= 0)) AND (features#73444.properties.CITY = Los Angeles))) AND isnotnull(features#73444.geometry))
                  +- Generate explode(features#74046), [0], false, [features#73444]
                     +- Project [features#74046]
                        +- Filter ((size(features#74046, true) > 0) AND isnotnull(features#74046))
                           +- Relation [crs#74045,features#74046,name#74047,type#74048] geojson

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Project [COMM#73460, (total_money#73727 / cast(total_pop#73729L as decimal(20,0))) AS Annual Average Income Per Person ($)#74085, (cast(count#74042L as double) / cast(total_pop#73729L as double)) AS Rate of Total Crimes Per Person#74086]
   +- ShuffledHashJoin [COMM#73460], [COMM#74056], FullOuter, BuildRight
      :- HashAggregate(keys=[COMM#73460], functions=[sum(total_money#73666), sum(total_pop#73647L)], output=[COMM#73460, total_money#73727, total_pop#73729L], schema specialized)
      :  +- Exchange hashpartitioning(COMM#73460, 1000), ENSURE_REQUIREMENTS, [plan_id=47324]
      :     +- HashAggregate(keys=[COMM#73460], functions=[partial_sum(total_money#73666), partial_sum(total_pop#73647L)], output=[COMM#73460, sum#74101, isEmpty#74102, sum#74104L], schema specialized)
      :        +- Project [COMM#73460, total_pop#73647L, (cast(total_houses#73645L as decimal(20,0)) * Estimated Median Income#73614) AS total_money#73666]
      :           +- ShuffledHashJoin [cast(ZCTA10#73477 as int)], [Zip Code#73599], Inner, BuildRight
      :              :- Exchange hashpartitioning(cast(ZCTA10#73477 as int), 1000), ENSURE_REQUIREMENTS, [plan_id=47318]
      :              :  +- HashAggregate(keys=[COMM#73460, ZCTA10#73477], functions=[sum(HOUSING10#73466L), sum(POP_2010#73469L)], output=[COMM#73460, ZCTA10#73477, total_houses#73645L, total_pop#73647L], schema specialized)
      :              :     +- Exchange hashpartitioning(COMM#73460, ZCTA10#73477, 1000), ENSURE_REQUIREMENTS, [plan_id=47314]
      :              :        +- HashAggregate(keys=[COMM#73460, ZCTA10#73477], functions=[partial_sum(HOUSING10#73466L), partial_sum(POP_2010#73469L)], output=[COMM#73460, ZCTA10#73477, sum#73684L, sum#73686L], schema specialized)
      :              :           +- Project [features#73444.properties.COMM AS COMM#73460, features#73444.properties.HOUSING10 AS HOUSING10#73466L, features#73444.properties.POP_2010 AS POP_2010#73469L, features#73444.properties.ZCTA10 AS ZCTA10#73477]
      :              :              +- Filter ((((isnotnull(features#73444.properties.HOUSING10) AND isnotnull(features#73444.properties.POP_2010)) AND isnotnull(features#73444.properties.CITY)) AND (((features#73444.properties.HOUSING10 >= 0) AND (features#73444.properties.POP_2010 >= 0)) AND (features#73444.properties.CITY = Los Angeles))) AND isnotnull(features#73444.properties.ZCTA10))
      :              :                 +- Generate explode(features#73436), false, [features#73444]
      :              :                    +- Filter ((size(features#73436, true) > 0) AND isnotnull(features#73436))
      :              :                       +- FileScan geojson [features#73436] Batched: false, DataFilters: [(size(features#73436, true) > 0), isnotnull(features#73436)], Format: GEOJSON, Location: InMemoryFileIndex(1 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/2010_Census_Block..., PartitionFilters: [], PushedFilters: [IsNotNull(features)], ReadSchema: struct<features:array<struct<geometry:binary,properties:struct<BG10:string,BG10FIP10:string,BG12:...
      :              +- Exchange hashpartitioning(Zip Code#73599, 1000), ENSURE_REQUIREMENTS, [plan_id=47319]
      :                 +- Project [Zip Code#73599, cast(regexp_replace(regexp_replace(Estimated Median Income#73601, \\$, , 1), ,, , 1) as decimal(10,0)) AS Estimated Median Income#73614]
      :                    +- Filter isnotnull(Zip Code#73599)
      :                       +- FileScan csv [Zip Code#73599,Estimated Median Income#73601] Batched: false, DataFilters: [isnotnull(Zip Code#73599)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
      +- HashAggregate(keys=[COMM#74056], functions=[count(1)], output=[COMM#74056, count#74042L], schema specialized)
         +- Exchange hashpartitioning(COMM#74056, 1000), ENSURE_REQUIREMENTS, [plan_id=47326]
            +- HashAggregate(keys=[COMM#74056], functions=[partial_count(1)], output=[COMM#74056, count#74106L], schema specialized)
               +- Project [COMM#74056]
                  +- RangeJoin geom#73811: geometry, geometry#73447: geometry, WITHIN
                     :- Project [ **org.apache.spark.sql.sedona_sql.expressions.ST_Point**   AS geom#73811]
                     :  +- Filter ((((isnotnull(LAT#73777) AND isnotnull(LON#73778)) AND NOT (cast(LAT#73777 as int) = 0)) AND NOT (cast(LON#73778 as int) = 0)) AND isnotnull( **org.apache.spark.sql.sedona_sql.expressions.ST_Point**  ))
                     :     +- FileScan csv [LAT#73777,LON#73778] Batched: false, DataFilters: [isnotnull(LAT#73777), isnotnull(LON#73778), NOT (cast(LAT#73777 as int) = 0), NOT (cast(LON#7377..., Format: CSV, Location: InMemoryFileIndex(2 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/CrimeData/Crime_D..., PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:string,LON:string>
                     +- Project [features#73444.properties.COMM AS COMM#74056, features#73444.geometry AS geometry#73447]
                        +- Filter ((((isnotnull(features#73444.properties.HOUSING10) AND isnotnull(features#73444.properties.POP_2010)) AND isnotnull(features#73444.properties.CITY)) AND (((features#73444.properties.HOUSING10 >= 0) AND (features#73444.properties.POP_2010 >= 0)) AND (features#73444.properties.CITY = Los Angeles))) AND isnotnull(features#73444.geometry))
                           +- Generate explode(features#74046), false, [features#73444]
                              +- Filter ((size(features#74046, true) > 0) AND isnotnull(features#74046))
                                 +- FileScan geojson [features#74046] Batched: false, DataFilters: [(size(features#74046, true) > 0), isnotnull(features#74046)], Format: GEOJSON, Location: InMemoryFileIndex(1 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/2010_Census_Block..., PartitionFilters: [], PushedFilters: [IsNotNull(features)], ReadSchema: struct<features:array<struct<geometry:binary,properties:struct<BG10:string,BG10FIP10:string,BG12:..."
