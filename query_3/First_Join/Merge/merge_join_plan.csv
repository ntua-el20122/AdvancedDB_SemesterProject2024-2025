Description,Details
Execution Plan,"== Parsed Logical Plan ==
'Project [ZCTA10#72668, COMM#72651, total_pop#72838L, (total_houses#72836L * Estimated Median Income#72805) AS total_money#72857]
+- Join Inner, (cast(ZCTA10#72668 as int) = Zip Code#72790)
   :- Aggregate [COMM#72651, ZCTA10#72668], [COMM#72651, ZCTA10#72668, sum(HOUSING10#72657L) AS total_houses#72836L, sum(POP_2010#72660L) AS total_pop#72838L]
   :  +- Filter (((HOUSING10#72657L >= cast(0 as bigint)) AND (POP_2010#72660L >= cast(0 as bigint))) AND (CITY#72649 = Los Angeles))
   :     +- Project [properties#72639.BG10 AS BG10#72644, properties#72639.BG10FIP10 AS BG10FIP10#72645, properties#72639.BG12 AS BG12#72646, properties#72639.CB10 AS CB10#72647, properties#72639.CEN_FIP13 AS CEN_FIP13#72648, properties#72639.CITY AS CITY#72649, properties#72639.CITYCOM AS CITYCOM#72650, properties#72639.COMM AS COMM#72651, properties#72639.CT10 AS CT10#72652, properties#72639.CT12 AS CT12#72653, properties#72639.CTCB10 AS CTCB10#72654, properties#72639.HD_2012 AS HD_2012#72655L, properties#72639.HD_NAME AS HD_NAME#72656, properties#72639.HOUSING10 AS HOUSING10#72657L, properties#72639.LA_FIP10 AS LA_FIP10#72658, properties#72639.OBJECTID AS OBJECTID#72659L, properties#72639.POP_2010 AS POP_2010#72660L, properties#72639.PUMA10 AS PUMA10#72661, properties#72639.SPA_2012 AS SPA_2012#72662L, properties#72639.SPA_NAME AS SPA_NAME#72663, properties#72639.SUP_DIST AS SUP_DIST#72664, properties#72639.SUP_LABEL AS SUP_LABEL#72665, properties#72639.ShapeSTArea AS ShapeSTArea#72666, properties#72639.ShapeSTLength AS ShapeSTLength#72667, ... 2 more fields]
   :        +- Project [features#72635.geometry AS geometry#72638, features#72635.properties AS properties#72639, features#72635.type AS type#72640]
   :           +- Project [features#72635]
   :              +- Generate explode(features#72627), false, [features#72635]
   :                 +- Relation [crs#72626,features#72627,name#72628,type#72629] geojson
   +- ResolvedHint (strategy=merge)
      +- Project [Zip Code#72790, Community#72791, cast(Estimated Median Income#72801 as decimal(10,0)) AS Estimated Median Income#72805]
         +- Project [Zip Code#72790, Community#72791, regexp_replace(Estimated Median Income#72796, ,, , 1) AS Estimated Median Income#72801]
            +- Project [Zip Code#72790, Community#72791, regexp_replace(Estimated Median Income#72792, \\$, , 1) AS Estimated Median Income#72796]
               +- Relation [Zip Code#72790,Community#72791,Estimated Median Income#72792] csv

== Analyzed Logical Plan ==
ZCTA10: string, COMM: string, total_pop: bigint, total_money: decimal(31,0)
Project [ZCTA10#72668, COMM#72651, total_pop#72838L, (cast(total_houses#72836L as decimal(20,0)) * Estimated Median Income#72805) AS total_money#72857]
+- Join Inner, (cast(ZCTA10#72668 as int) = Zip Code#72790)
   :- Aggregate [COMM#72651, ZCTA10#72668], [COMM#72651, ZCTA10#72668, sum(HOUSING10#72657L) AS total_houses#72836L, sum(POP_2010#72660L) AS total_pop#72838L]
   :  +- Filter (((HOUSING10#72657L >= cast(0 as bigint)) AND (POP_2010#72660L >= cast(0 as bigint))) AND (CITY#72649 = Los Angeles))
   :     +- Project [properties#72639.BG10 AS BG10#72644, properties#72639.BG10FIP10 AS BG10FIP10#72645, properties#72639.BG12 AS BG12#72646, properties#72639.CB10 AS CB10#72647, properties#72639.CEN_FIP13 AS CEN_FIP13#72648, properties#72639.CITY AS CITY#72649, properties#72639.CITYCOM AS CITYCOM#72650, properties#72639.COMM AS COMM#72651, properties#72639.CT10 AS CT10#72652, properties#72639.CT12 AS CT12#72653, properties#72639.CTCB10 AS CTCB10#72654, properties#72639.HD_2012 AS HD_2012#72655L, properties#72639.HD_NAME AS HD_NAME#72656, properties#72639.HOUSING10 AS HOUSING10#72657L, properties#72639.LA_FIP10 AS LA_FIP10#72658, properties#72639.OBJECTID AS OBJECTID#72659L, properties#72639.POP_2010 AS POP_2010#72660L, properties#72639.PUMA10 AS PUMA10#72661, properties#72639.SPA_2012 AS SPA_2012#72662L, properties#72639.SPA_NAME AS SPA_NAME#72663, properties#72639.SUP_DIST AS SUP_DIST#72664, properties#72639.SUP_LABEL AS SUP_LABEL#72665, properties#72639.ShapeSTArea AS ShapeSTArea#72666, properties#72639.ShapeSTLength AS ShapeSTLength#72667, ... 2 more fields]
   :        +- Project [features#72635.geometry AS geometry#72638, features#72635.properties AS properties#72639, features#72635.type AS type#72640]
   :           +- Project [features#72635]
   :              +- Generate explode(features#72627), false, [features#72635]
   :                 +- Relation [crs#72626,features#72627,name#72628,type#72629] geojson
   +- ResolvedHint (strategy=merge)
      +- Project [Zip Code#72790, Community#72791, cast(Estimated Median Income#72801 as decimal(10,0)) AS Estimated Median Income#72805]
         +- Project [Zip Code#72790, Community#72791, regexp_replace(Estimated Median Income#72796, ,, , 1) AS Estimated Median Income#72801]
            +- Project [Zip Code#72790, Community#72791, regexp_replace(Estimated Median Income#72792, \\$, , 1) AS Estimated Median Income#72796]
               +- Relation [Zip Code#72790,Community#72791,Estimated Median Income#72792] csv

== Optimized Logical Plan ==
Project [ZCTA10#72668, COMM#72651, total_pop#72838L, (cast(total_houses#72836L as decimal(20,0)) * Estimated Median Income#72805) AS total_money#72857]
+- Join Inner, (cast(ZCTA10#72668 as int) = Zip Code#72790), rightHint=(strategy=merge)
   :- Aggregate [COMM#72651, ZCTA10#72668], [COMM#72651, ZCTA10#72668, sum(HOUSING10#72657L) AS total_houses#72836L, sum(POP_2010#72660L) AS total_pop#72838L]
   :  +- Project [features#72635.properties.COMM AS COMM#72651, features#72635.properties.HOUSING10 AS HOUSING10#72657L, features#72635.properties.POP_2010 AS POP_2010#72660L, features#72635.properties.ZCTA10 AS ZCTA10#72668]
   :     +- Filter ((((isnotnull(features#72635.properties.HOUSING10) AND isnotnull(features#72635.properties.POP_2010)) AND isnotnull(features#72635.properties.CITY)) AND (((features#72635.properties.HOUSING10 >= 0) AND (features#72635.properties.POP_2010 >= 0)) AND (features#72635.properties.CITY = Los Angeles))) AND isnotnull(features#72635.properties.ZCTA10))
   :        +- Generate explode(features#72627), [0], false, [features#72635]
   :           +- Project [features#72627]
   :              +- Filter ((size(features#72627, true) > 0) AND isnotnull(features#72627))
   :                 +- Relation [crs#72626,features#72627,name#72628,type#72629] geojson
   +- Project [Zip Code#72790, cast(regexp_replace(regexp_replace(Estimated Median Income#72792, \\$, , 1), ,, , 1) as decimal(10,0)) AS Estimated Median Income#72805]
      +- Filter isnotnull(Zip Code#72790)
         +- Relation [Zip Code#72790,Community#72791,Estimated Median Income#72792] csv

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Project [ZCTA10#72668, COMM#72651, total_pop#72838L, (cast(total_houses#72836L as decimal(20,0)) * Estimated Median Income#72805) AS total_money#72857]
   +- SortMergeJoin [cast(ZCTA10#72668 as int)], [Zip Code#72790], Inner
      :- Sort [cast(ZCTA10#72668 as int) ASC NULLS FIRST], false, 0
      :  +- Exchange hashpartitioning(cast(ZCTA10#72668 as int), 1000), ENSURE_REQUIREMENTS, [plan_id=44278]
      :     +- HashAggregate(keys=[COMM#72651, ZCTA10#72668], functions=[sum(HOUSING10#72657L), sum(POP_2010#72660L)], output=[COMM#72651, ZCTA10#72668, total_houses#72836L, total_pop#72838L], schema specialized)
      :        +- Exchange hashpartitioning(COMM#72651, ZCTA10#72668, 1000), ENSURE_REQUIREMENTS, [plan_id=44274]
      :           +- HashAggregate(keys=[COMM#72651, ZCTA10#72668], functions=[partial_sum(HOUSING10#72657L), partial_sum(POP_2010#72660L)], output=[COMM#72651, ZCTA10#72668, sum#72875L, sum#72877L], schema specialized)
      :              +- Project [features#72635.properties.COMM AS COMM#72651, features#72635.properties.HOUSING10 AS HOUSING10#72657L, features#72635.properties.POP_2010 AS POP_2010#72660L, features#72635.properties.ZCTA10 AS ZCTA10#72668]
      :                 +- Filter ((((isnotnull(features#72635.properties.HOUSING10) AND isnotnull(features#72635.properties.POP_2010)) AND isnotnull(features#72635.properties.CITY)) AND (((features#72635.properties.HOUSING10 >= 0) AND (features#72635.properties.POP_2010 >= 0)) AND (features#72635.properties.CITY = Los Angeles))) AND isnotnull(features#72635.properties.ZCTA10))
      :                    +- Generate explode(features#72627), false, [features#72635]
      :                       +- Filter ((size(features#72627, true) > 0) AND isnotnull(features#72627))
      :                          +- FileScan geojson [features#72627] Batched: false, DataFilters: [(size(features#72627, true) > 0), isnotnull(features#72627)], Format: GEOJSON, Location: InMemoryFileIndex(1 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/2010_Census_Block..., PartitionFilters: [], PushedFilters: [IsNotNull(features)], ReadSchema: struct<features:array<struct<geometry:binary,properties:struct<BG10:string,BG10FIP10:string,BG12:...
      +- Sort [Zip Code#72790 ASC NULLS FIRST], false, 0
         +- Exchange hashpartitioning(Zip Code#72790, 1000), ENSURE_REQUIREMENTS, [plan_id=44279]
            +- Project [Zip Code#72790, cast(regexp_replace(regexp_replace(Estimated Median Income#72792, \\$, , 1), ,, , 1) as decimal(10,0)) AS Estimated Median Income#72805]
               +- Filter isnotnull(Zip Code#72790)
                  +- FileScan csv [Zip Code#72790,Estimated Median Income#72792] Batched: false, DataFilters: [isnotnull(Zip Code#72790)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>"
