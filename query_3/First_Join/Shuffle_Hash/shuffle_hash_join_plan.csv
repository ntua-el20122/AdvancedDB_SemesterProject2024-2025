Description,Details
Execution Plan,"== Parsed Logical Plan ==
'Project [ZCTA10#73477, COMM#73460, total_pop#73647L, (total_houses#73645L * Estimated Median Income#73614) AS total_money#73666]
+- Join Inner, (cast(ZCTA10#73477 as int) = Zip Code#73599)
   :- Aggregate [COMM#73460, ZCTA10#73477], [COMM#73460, ZCTA10#73477, sum(HOUSING10#73466L) AS total_houses#73645L, sum(POP_2010#73469L) AS total_pop#73647L]
   :  +- Filter (((HOUSING10#73466L >= cast(0 as bigint)) AND (POP_2010#73469L >= cast(0 as bigint))) AND (CITY#73458 = Los Angeles))
   :     +- Project [properties#73448.BG10 AS BG10#73453, properties#73448.BG10FIP10 AS BG10FIP10#73454, properties#73448.BG12 AS BG12#73455, properties#73448.CB10 AS CB10#73456, properties#73448.CEN_FIP13 AS CEN_FIP13#73457, properties#73448.CITY AS CITY#73458, properties#73448.CITYCOM AS CITYCOM#73459, properties#73448.COMM AS COMM#73460, properties#73448.CT10 AS CT10#73461, properties#73448.CT12 AS CT12#73462, properties#73448.CTCB10 AS CTCB10#73463, properties#73448.HD_2012 AS HD_2012#73464L, properties#73448.HD_NAME AS HD_NAME#73465, properties#73448.HOUSING10 AS HOUSING10#73466L, properties#73448.LA_FIP10 AS LA_FIP10#73467, properties#73448.OBJECTID AS OBJECTID#73468L, properties#73448.POP_2010 AS POP_2010#73469L, properties#73448.PUMA10 AS PUMA10#73470, properties#73448.SPA_2012 AS SPA_2012#73471L, properties#73448.SPA_NAME AS SPA_NAME#73472, properties#73448.SUP_DIST AS SUP_DIST#73473, properties#73448.SUP_LABEL AS SUP_LABEL#73474, properties#73448.ShapeSTArea AS ShapeSTArea#73475, properties#73448.ShapeSTLength AS ShapeSTLength#73476, ... 2 more fields]
   :        +- Project [features#73444.geometry AS geometry#73447, features#73444.properties AS properties#73448, features#73444.type AS type#73449]
   :           +- Project [features#73444]
   :              +- Generate explode(features#73436), false, [features#73444]
   :                 +- Relation [crs#73435,features#73436,name#73437,type#73438] geojson
   +- ResolvedHint (strategy=shuffle_hash)
      +- Project [Zip Code#73599, Community#73600, cast(Estimated Median Income#73610 as decimal(10,0)) AS Estimated Median Income#73614]
         +- Project [Zip Code#73599, Community#73600, regexp_replace(Estimated Median Income#73605, ,, , 1) AS Estimated Median Income#73610]
            +- Project [Zip Code#73599, Community#73600, regexp_replace(Estimated Median Income#73601, \\$, , 1) AS Estimated Median Income#73605]
               +- Relation [Zip Code#73599,Community#73600,Estimated Median Income#73601] csv

== Analyzed Logical Plan ==
ZCTA10: string, COMM: string, total_pop: bigint, total_money: decimal(31,0)
Project [ZCTA10#73477, COMM#73460, total_pop#73647L, (cast(total_houses#73645L as decimal(20,0)) * Estimated Median Income#73614) AS total_money#73666]
+- Join Inner, (cast(ZCTA10#73477 as int) = Zip Code#73599)
   :- Aggregate [COMM#73460, ZCTA10#73477], [COMM#73460, ZCTA10#73477, sum(HOUSING10#73466L) AS total_houses#73645L, sum(POP_2010#73469L) AS total_pop#73647L]
   :  +- Filter (((HOUSING10#73466L >= cast(0 as bigint)) AND (POP_2010#73469L >= cast(0 as bigint))) AND (CITY#73458 = Los Angeles))
   :     +- Project [properties#73448.BG10 AS BG10#73453, properties#73448.BG10FIP10 AS BG10FIP10#73454, properties#73448.BG12 AS BG12#73455, properties#73448.CB10 AS CB10#73456, properties#73448.CEN_FIP13 AS CEN_FIP13#73457, properties#73448.CITY AS CITY#73458, properties#73448.CITYCOM AS CITYCOM#73459, properties#73448.COMM AS COMM#73460, properties#73448.CT10 AS CT10#73461, properties#73448.CT12 AS CT12#73462, properties#73448.CTCB10 AS CTCB10#73463, properties#73448.HD_2012 AS HD_2012#73464L, properties#73448.HD_NAME AS HD_NAME#73465, properties#73448.HOUSING10 AS HOUSING10#73466L, properties#73448.LA_FIP10 AS LA_FIP10#73467, properties#73448.OBJECTID AS OBJECTID#73468L, properties#73448.POP_2010 AS POP_2010#73469L, properties#73448.PUMA10 AS PUMA10#73470, properties#73448.SPA_2012 AS SPA_2012#73471L, properties#73448.SPA_NAME AS SPA_NAME#73472, properties#73448.SUP_DIST AS SUP_DIST#73473, properties#73448.SUP_LABEL AS SUP_LABEL#73474, properties#73448.ShapeSTArea AS ShapeSTArea#73475, properties#73448.ShapeSTLength AS ShapeSTLength#73476, ... 2 more fields]
   :        +- Project [features#73444.geometry AS geometry#73447, features#73444.properties AS properties#73448, features#73444.type AS type#73449]
   :           +- Project [features#73444]
   :              +- Generate explode(features#73436), false, [features#73444]
   :                 +- Relation [crs#73435,features#73436,name#73437,type#73438] geojson
   +- ResolvedHint (strategy=shuffle_hash)
      +- Project [Zip Code#73599, Community#73600, cast(Estimated Median Income#73610 as decimal(10,0)) AS Estimated Median Income#73614]
         +- Project [Zip Code#73599, Community#73600, regexp_replace(Estimated Median Income#73605, ,, , 1) AS Estimated Median Income#73610]
            +- Project [Zip Code#73599, Community#73600, regexp_replace(Estimated Median Income#73601, \\$, , 1) AS Estimated Median Income#73605]
               +- Relation [Zip Code#73599,Community#73600,Estimated Median Income#73601] csv

== Optimized Logical Plan ==
Project [ZCTA10#73477, COMM#73460, total_pop#73647L, (cast(total_houses#73645L as decimal(20,0)) * Estimated Median Income#73614) AS total_money#73666]
+- Join Inner, (cast(ZCTA10#73477 as int) = Zip Code#73599), rightHint=(strategy=shuffle_hash)
   :- Aggregate [COMM#73460, ZCTA10#73477], [COMM#73460, ZCTA10#73477, sum(HOUSING10#73466L) AS total_houses#73645L, sum(POP_2010#73469L) AS total_pop#73647L]
   :  +- Project [features#73444.properties.COMM AS COMM#73460, features#73444.properties.HOUSING10 AS HOUSING10#73466L, features#73444.properties.POP_2010 AS POP_2010#73469L, features#73444.properties.ZCTA10 AS ZCTA10#73477]
   :     +- Filter ((((isnotnull(features#73444.properties.HOUSING10) AND isnotnull(features#73444.properties.POP_2010)) AND isnotnull(features#73444.properties.CITY)) AND (((features#73444.properties.HOUSING10 >= 0) AND (features#73444.properties.POP_2010 >= 0)) AND (features#73444.properties.CITY = Los Angeles))) AND isnotnull(features#73444.properties.ZCTA10))
   :        +- Generate explode(features#73436), [0], false, [features#73444]
   :           +- Project [features#73436]
   :              +- Filter ((size(features#73436, true) > 0) AND isnotnull(features#73436))
   :                 +- Relation [crs#73435,features#73436,name#73437,type#73438] geojson
   +- Project [Zip Code#73599, cast(regexp_replace(regexp_replace(Estimated Median Income#73601, \\$, , 1), ,, , 1) as decimal(10,0)) AS Estimated Median Income#73614]
      +- Filter isnotnull(Zip Code#73599)
         +- Relation [Zip Code#73599,Community#73600,Estimated Median Income#73601] csv

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Project [ZCTA10#73477, COMM#73460, total_pop#73647L, (cast(total_houses#73645L as decimal(20,0)) * Estimated Median Income#73614) AS total_money#73666]
   +- ShuffledHashJoin [cast(ZCTA10#73477 as int)], [Zip Code#73599], Inner, BuildRight
      :- Exchange hashpartitioning(cast(ZCTA10#73477 as int), 1000), ENSURE_REQUIREMENTS, [plan_id=46415]
      :  +- HashAggregate(keys=[COMM#73460, ZCTA10#73477], functions=[sum(HOUSING10#73466L), sum(POP_2010#73469L)], output=[COMM#73460, ZCTA10#73477, total_houses#73645L, total_pop#73647L], schema specialized)
      :     +- Exchange hashpartitioning(COMM#73460, ZCTA10#73477, 1000), ENSURE_REQUIREMENTS, [plan_id=46411]
      :        +- HashAggregate(keys=[COMM#73460, ZCTA10#73477], functions=[partial_sum(HOUSING10#73466L), partial_sum(POP_2010#73469L)], output=[COMM#73460, ZCTA10#73477, sum#73684L, sum#73686L], schema specialized)
      :           +- Project [features#73444.properties.COMM AS COMM#73460, features#73444.properties.HOUSING10 AS HOUSING10#73466L, features#73444.properties.POP_2010 AS POP_2010#73469L, features#73444.properties.ZCTA10 AS ZCTA10#73477]
      :              +- Filter ((((isnotnull(features#73444.properties.HOUSING10) AND isnotnull(features#73444.properties.POP_2010)) AND isnotnull(features#73444.properties.CITY)) AND (((features#73444.properties.HOUSING10 >= 0) AND (features#73444.properties.POP_2010 >= 0)) AND (features#73444.properties.CITY = Los Angeles))) AND isnotnull(features#73444.properties.ZCTA10))
      :                 +- Generate explode(features#73436), false, [features#73444]
      :                    +- Filter ((size(features#73436, true) > 0) AND isnotnull(features#73436))
      :                       +- FileScan geojson [features#73436] Batched: false, DataFilters: [(size(features#73436, true) > 0), isnotnull(features#73436)], Format: GEOJSON, Location: InMemoryFileIndex(1 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/2010_Census_Block..., PartitionFilters: [], PushedFilters: [IsNotNull(features)], ReadSchema: struct<features:array<struct<geometry:binary,properties:struct<BG10:string,BG10FIP10:string,BG12:...
      +- Exchange hashpartitioning(Zip Code#73599, 1000), ENSURE_REQUIREMENTS, [plan_id=46416]
         +- Project [Zip Code#73599, cast(regexp_replace(regexp_replace(Estimated Median Income#73601, \\$, , 1), ,, , 1) as decimal(10,0)) AS Estimated Median Income#73614]
            +- Filter isnotnull(Zip Code#73599)
               +- FileScan csv [Zip Code#73599,Estimated Median Income#73601] Batched: false, DataFilters: [isnotnull(Zip Code#73599)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3://initial-notebook-data-bucket-dblab-905418150721/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>"
