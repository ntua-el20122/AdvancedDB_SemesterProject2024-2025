Join Strategy,Elapsed Time (sec),Execution Plan
DEFAULT,17.64800786972046,"== Physical Plan ==
AdaptiveSparkPlan (15)
+- Project (14)
   +- BroadcastHashJoin Inner BuildRight (13)
      :- HashAggregate (8)
      :  +- Exchange (7)
      :     +- HashAggregate (6)
      :        +- Project (5)
      :           +- Filter (4)
      :              +- Generate (3)
      :                 +- Filter (2)
      :                    +- Scan geojson  (1)
      +- BroadcastExchange (12)
         +- Project (11)
            +- Filter (10)
               +- Scan csv  (9)


(1) Scan geojson 
Output [1]: [features#25]
Batched: false
Location: InMemoryFileIndex [s3://initial-notebook-data-bucket-dblab-905418150721/2010_Census_Blocks.geojson]
PushedFilters: [IsNotNull(features)]
ReadSchema: struct<features:array<struct<geometry:binary,properties:struct<BG10:string,BG10FIP10:string,BG12:string,CB10:string,CEN_FIP13:string,CITY:string,CITYCOM:string,COMM:string,CT10:string,CT12:string,CTCB10:string,HD_2012:bigint,HD_NAME:string,HOUSING10:bigint,LA_FIP10:string,OBJECTID:bigint,POP_2010:bigint,PUMA10:string,SPA_2012:bigint,SPA_NAME:string,SUP_DIST:string,SUP_LABEL:string,ShapeSTArea:double,ShapeSTLength:double,ZCTA10:string>,type:string>>>

(2) Filter
Input [1]: [features#25]
Condition : ((size(features#25, true) > 0) AND isnotnull(features#25))

(3) Generate
Input [1]: [features#25]
Arguments: explode(features#25), false, [features#33]

(4) Filter
Input [1]: [features#33]
Condition : ((((isnotnull(features#33.properties.HOUSING10) AND isnotnull(features#33.properties.POP_2010)) AND isnotnull(features#33.properties.CITY)) AND (((features#33.properties.HOUSING10 >= 0) AND (features#33.properties.POP_2010 >= 0)) AND (features#33.properties.CITY = Los Angeles))) AND isnotnull(features#33.properties.ZCTA10))

(5) Project
Output [4]: [features#33.properties.COMM AS COMM#49, features#33.properties.HOUSING10 AS HOUSING10#55L, features#33.properties.POP_2010 AS POP_2010#58L, features#33.properties.ZCTA10 AS ZCTA10#66]
Input [1]: [features#33]

(6) HashAggregate
Input [4]: [COMM#49, HOUSING10#55L, POP_2010#58L, ZCTA10#66]
Keys [2]: [COMM#49, ZCTA10#66]
Functions [2]: [partial_sum(HOUSING10#55L), partial_sum(POP_2010#58L)]
Aggregate Attributes [2]: [sum#272L, sum#274L]
Results [4]: [COMM#49, ZCTA10#66, sum#273L, sum#275L]

(7) Exchange
Input [4]: [COMM#49, ZCTA10#66, sum#273L, sum#275L]
Arguments: hashpartitioning(COMM#49, ZCTA10#66, 1000), ENSURE_REQUIREMENTS, [plan_id=289]

(8) HashAggregate
Input [4]: [COMM#49, ZCTA10#66, sum#273L, sum#275L]
Keys [2]: [COMM#49, ZCTA10#66]
Functions [2]: [sum(HOUSING10#55L), sum(POP_2010#58L)]
Aggregate Attributes [2]: [sum(HOUSING10#55L)#233L, sum(POP_2010#58L)#235L]
Results [4]: [COMM#49, ZCTA10#66, sum(HOUSING10#55L)#233L AS total_houses#234L, sum(POP_2010#58L)#235L AS total_pop#236L]

(9) Scan csv 
Output [2]: [Zip Code#188, Estimated Median Income#190]
Batched: false
Location: InMemoryFileIndex [s3://initial-notebook-data-bucket-dblab-905418150721/LA_income_2015.csv]
PushedFilters: [IsNotNull(Zip Code)]
ReadSchema: struct<Zip Code:int,Estimated Median Income:string>

(10) Filter
Input [2]: [Zip Code#188, Estimated Median Income#190]
Condition : isnotnull(Zip Code#188)

(11) Project
Output [2]: [Zip Code#188, cast(regexp_replace(regexp_replace(Estimated Median Income#190, \\$, , 1), ,, , 1) as decimal(10,0)) AS Estimated Median Income#203]
Input [2]: [Zip Code#188, Estimated Median Income#190]

(12) BroadcastExchange
Input [2]: [Zip Code#188, Estimated Median Income#203]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=292]

(13) BroadcastHashJoin
Left keys [1]: [cast(ZCTA10#66 as int)]
Right keys [1]: [Zip Code#188]
Join type: Inner
Join condition: None

(14) Project
Output [4]: [ZCTA10#66, COMM#49, total_pop#236L, (cast(total_houses#234L as decimal(20,0)) * Estimated Median Income#203) AS total_money#255]
Input [6]: [COMM#49, ZCTA10#66, total_houses#234L, total_pop#236L, Zip Code#188, Estimated Median Income#203]

(15) AdaptiveSparkPlan
Output [4]: [ZCTA10#66, COMM#49, total_pop#236L, total_money#255]
Arguments: isFinalPlan=false"
